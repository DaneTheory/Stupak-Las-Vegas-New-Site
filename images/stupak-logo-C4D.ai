%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 18.1.0%%For: (Zizek) ()%%Title: (stupak-logo-C4D.ai)%%CreationDate: 11/3/14 1:16 AM%%Canvassize: 16383%%BoundingBox: 84 115 257 317%%HiResBoundingBox: 84.1455 115.7089 256.4988 316.6718%%DocumentProcessColors:%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%DocumentCustomColors: (PANTONE 872 C)%%CMYKCustomColor: 0.2 0.3 0.7 0.15 (PANTONE 872 C)%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 180.5 179.5 180.5 179.5%AI3_TileBox: -108 -176 468 558%AI3_DocumentPreview: None%AI5_ArtSize: 360 360%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -333.6667 545 1.5 1589 905 18 1 0 46 132 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 112 128 8%%BeginData: 8522 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3FFFA1A07CCFFD6CFFA77BA0A7FD6CFFA7A07BCFFD6CFFA77B7C%A7FD6CFFA7A07CCFFD6CFFA77B7CA7FD6CFFA1A07CCFFD6CFFA7757CA7FD%0AFFA7A8FD60FFA7A07CCFFD09FFA77BA6FD5FFFA7A07BA0A1CFFD06FFCA%A07BA07BA7FD5DFFA8A07CA07CA0A0FD05FFA8A67CA07CA07BA8FD5CFFCF%7B7C7B7C75A7FD04FFA77C75A07B7C7B7C7BFD5CFFA8A07CA07CA0A1FFFF%FFA7A07CA07CA07CA07CCAFD5CFFCF7BA07C7C7BA7FFFFA1A07B7C7BA07C%7C7BCFFD5DFFCAA07BA07CA0A1FFA1A07CA07CA07CA07CFD5FFFCF7B7C7B%A07BA07C7C7B7C7BA07B7C7CFD60FFCAA07CA07CA07CA07CA07CA07CA0A0%FD61FFCF7C7C7BA07C7C7BA07C7C7B7CA1FD62FFA8A07CA07CA07CA07CA0%7CA0A7FD63FFCF7B7C7B7C7BA07B7C75A0A7FD64FFCAA07CA07CA07CA07B%A6CAFD65FFA77BA07C7C7BA07BA0A8FD64FFCFA77BA07CA07CA07BA7FD65%FFA8A075A07B7C7B7C7BA7FD65FFA8A07BA07CA07CA07CA7FD65FFA7A07B%7C7BA07C7C7BA8FD07FFA77BCAFD5BFFA7A07BA07CA07CA07CCFFD07FFA7%7BA07CFD5AFF7C7C7B7C7BA07B7C7CCFFD06FFA8A07B7C7B7CA0FD58FFA0%A07CA07CA07CA07CFD07FFA8A67CA07CA07CA0A7FD1DFFA7A7FD37FF7C7C%7BA07C7C7B7C7CFD07FFA77C7BA07C7C7BA07BA7FD1CFFA7A07BA7FD35FF%7CA07CA07CA07CA0A1FD07FFA7A07CA07CA07CA07CCFFD1CFFA8A07BA07B%A7FD32FFCF7B7C7BA07B7C7B7CA7FD07FFA17C7BA07B7C7B7C7CCFFD1CFF%A8A07B7C7BA07BA7FD30FFCF7CA07CA07CA07CA0A8FD07FFA0A07CA07CA0%7CA0A0FD1DFFCAA67CA07CA07CA0A7FD2FFFA77BA07C7C7BA07B7CA8FD07%FFFD047C7BA07C7C7CFD1DFFCAA07BA07C7C7BA0A7FD2FFFA77BA07CA07C%A07BA6CFFD06FFCF7CA07CA07CA07BA0A7FD1EFFA77CA07CA07CA0A7FD2F%FFA775A07B7C7BA07BA0A8FD06FFA87B7C7B7C7BA07B7CA1FD1EFFA075A0%7B7C7B7CA0FD2FFFA77BA07CA07CA07BA7FD07FFA87BA07CA07CA07CA0A7%FD1EFFA77BA07CA07CA0A1FD2EFFA8A07B7C7BA07C7C7BA7FD07FFA77B7C%7BA07C7C7BA07CFD1EFFA77B7C7BA07C7C7CFD2EFFA8A07BA07CA07CA07C%A8FD07FFA77BA07CA07CA07CA07BA7FD1DFFA77BA07CA07CA07CFD2FFFA1%757C7BA07B7C7BCAFD06FFA8A07B7C7BA07B7C7BA07B7C7CFD1CFFA77B7C%7BA07B7C7CFD30FFCFA07CA07CA07CA6CFFD05FFA8A67CA07CA07CA07CA0%7CA07BA7FD1BFFCA7CA07CA07CA07CFD32FFA87C7BA07C7C7BA0FD05FFA7%75A07C7C7BA07CA07BA07C7C7CFD1AFFA77BA07C7C7BA07CCFFD33FFA7A0%7CA07CA07BA7FD04FFCFA07BA07CA07CCFA1A07CA07CA7FD19FFCF7CA07C%A07CA07BCFFD35FF7C7C7BA07B7C75CAFD04FFA77C7B7C7CCFFFA77B7C7B%7C7CFD18FFA87B7C7B7C7B7C7BA8FD37FF7CA07CA07CA07CFD05FFA7A0A0%FFFFFFA0A07CA07CA7FD17FFCF7CA07CA07CA07CCAFD38FFCF7BA07C7C7B%A07CFD05FFA1FD04FFA77B7C7BA07CFD17FF7C7C7BA07C7C7BA8FD3AFFA8%7BA07CA07CA0A7FD09FF7CA07CA07BA7FD16FF7CA07CA07CA07BA7FD3CFF%A775A07B7C7BCFFD09FFA175A07B7C7CFD15FF7C7C7BA07B7C75A7FD3EFF%A77CA07CFD0BFFA0A07CA07BA7FD14FFA0A07CA07CA07BA7FD3FFFA8A07C%FD0CFFA77BA07C7C7CFD13FFFD047C7BA07BA0FD41FFA8FD0DFFA0A07CA0%7CA7FD12FFA0A07CA07CA07BA7FD50FFA77B7C7B7C7CFD11FF7C7C7B7C7B%A07BA0A8FD50FFA0A07CA07CA7FD10FFA7A07CA07CA07CA0CFFD50FFA7A0%7B7C7BA07CFD0FFFA77C7BA07C7C7BA0A8FD50FFA8A07BA07CA07BA7FD0E%FFA7A07CA07CA07CA0A8FD50FFA8A07B7C7BA07B7C7CFD0DFFA77C7BA07B%7C7B7CA7FD50FFCFA67CA07CA07CA07BA7FD0CFFA8A07CA07CA07CA0A7FD%50FFCFA07BA07C7C7BA07C7C7CFD0BFFA8A07B7C7BA07B7CA7FD51FFA77B%A07CA07CA07CA07CA7FD0AFFCAA07BA07CA07CA0A7FD51FFA775A07B7C7B%A07B7C7B7C7CFD09FFA8A07B7C7BA07B7C7CFD51FFA77BA07CA07CA07CA0%7CA07CA7FD09FFA77CA07CA07CA0A0FD51FFA77B7C7BA07C7C7BA07B7C7B%A07CFD08FFA07BA07C7C7B7C7CFD51FFCA7BA07CA07CA07CCAA7A07CA07B%A7FD07FFA77BA07CA07CA07CFD51FFCA7B7C7BA07B7C75A7FFA775A07B7C%7CFD06FFA775A07B7C7B7C7CFD52FF7CA07CA07CA07BA7FFFFA1A07CA07B%A7FD05FFA77BA07CA07CA07CFD52FF7CA07C7C7BA07BA7FFFFFFA77BA07C%7C7CFD04FFA77B7C7BA07C7C7BCFFD51FF7CA07CA07CA07BA7FD04FFA7A0%7CA07CA7FFFFFFA77BA07CA07CA07CCFFD51FF7C7C7B7C7BA07BA0A8FD04%FFA77B7C7B7C7CFFFFA77B7C7BA07B7C75CAFD51FFA0A07CA07CA07CA0CF%FD05FFA7A07CA07CA7FFCF7CA07CA07CA07BCFFD51FFA17C7BA07C7C7BA0%A8FD06FFA77B7C7BA0A0CA7BA07C7C7BA07BA7FD51FFA7A07CA07CA07CA0%A8FD07FFA1A07CA07BA67CA07CA07CA07BA7FD51FFA77C7BA07B7C7B7CA7%FD08FFA775A07B7C7B7C7B7C7BA07BA7FD51FFA8A07CA07CA07CA0A7FD09%FFA1A07CA07CA07CA07CA07CA7FD51FFA8A07B7C7BA07B7CA1FD0AFFA77B%A07C7C7BA07C7C7BA7FD51FFCFA07BA07CA07CA0A1FD0BFFA7A07CA07CA0%7CA07BA7FD51FFA8A07B7C7BA07B7C7CFD0CFFA77B7C7BA07B7C75A0A8FD%51FFA77CA07CA07CA07CFD0DFFA0A07CA07CA07BA6CFFD51FFA775A07C7C%7BA07CFD0DFF7CA07C7C7BA07B7CA8FD51FFA77BA07CA07CA07CFD0DFFA1%A07CA07CA07CA0A8FD51FFA775A07B7C7B7C7BCAFD0CFF7C7C7B7C7BA07B%7C7CFD51FFCA7BA07CA07CA07CCFFD0CFFA7A07CA07CA07CA07BA7FD50FF%CF7B7C7BA07C7C7BA8FD0CFFA77C7BA07C7C7BA07C7CA0FD4FFFCF7CA07C%A07CA07BA7FD0CFFA7A07CA07CA07CA07CA07CA7FD4FFF7C7C7BA07B7C75%A7FD0CFFA87C75A07B7C7BA07B7C7B7CA1FD4EFF7CA07CA07CA07BA7FD0C%FFCFA07CA07CA07CA07CA07CA07CA7FD4DFFFD047C7BA07BA0FD0CFFA8A0%7B7C7BA07C7C7CA77B7C7BA0A1FD4CFFA0A07CA07CA07BA7FD0DFFA07BA0%7CA07CA0A0FFA7A07CA07BA7FD4BFF7C7C7B7C7BA07BA0A8FD0CFFA07B7C%7BA07B7C7CFFFFA775A07B7C7CFD4AFFA7A07CA07CA07CA0CAFD0CFFA77C%A07CA07CA07CFFFFFFA1A07CA07BA7FD49FFA77C7BA07C7C7BA0A8FD0CFF%A775A07C7C7BA07CCFFFFFFFA77BA07C7CA0FD48FFA7A07CA07CA07CA0A7%FD0CFFA77BA07CA07CA07CCFFD04FFA7A07CA07CA7FD47FFA87C75A07B7C%7B7CA7FD0CFFA7757C7B7C7B7C7BA8FD05FFA77B7C7B7CA1FD46FFCFA07B%A07CA07CA0A7FD0CFFCA7BA07CA07CA07CCAFD06FFA7A07CA07CA7FD45FF%A8A07B7C7BA07C7C7CFD0CFFCA7B7C7BA07C7C7BA7FD07FFA77B7C7BA0A1%FD45FFA77BA07CA07CA0A0FD0CFFCF7CA07CA07CA07BA7FD08FFA1A07CA0%7BA7FD44FFA77B7C7BA07B7C7CFD0CFFCF7C7C7BA07B7C75A7FD09FFA775%A07B7C7CFD43FFA77CA07CA07CA07CFD0DFF7CA07CA07CA07BA7FD0AFFA1%A07CA07BA7FD42FFA77BA07C7C7BA07CCFFD0CFF7CA07C7C7BA07BA0FD0B%FFA77BA07C7CA0FD41FFCA7CA07CA07CA07CFD0DFFA0A07CA07CA07BA7FD%0CFFA7A07CA07CA7FD40FFA8757C7B7C7B7C7BCAFD0CFF7C7C7B7C7BA07B%A0A8FD0CFFA77B7C7B7CA1FD3FFFCF7CA07CA07CA07CCAFD0CFFA1A07CA0%7CA07CA0CAFD0DFFA7A07CA07CA7FD3FFF7C7C7BA07C7C7BA7FD0CFFA17C%7BA07C7C7BA0A8FD0EFFA77B7C7BA0A1FD3EFF7CA07CA07CA07BA7FD0CFF%A7A07CA07CA07CA0A8FD0FFFA1A07CA07BA7FD3DFF7C7C7BA07B7C75A7FD%0CFFA77C7BA07B7C7B7CA7FD10FFA775A07B7C7CFD3CFFA1A07CA07CA07B%A7FD0CFFA8A07CA07CA07CA0A7FD11FFA1A07CA07BA7FD3BFFFD047C7BA0%7BA0CAFD0BFFA7A07B7C7BA07B7CA1FD12FFA77BA07C7CA0FD3AFFA7A07C%A07CA07BA6CFFD0BFFCAA07BA07CA07CA0A7FD13FFA7A07CA07CA7FD39FF%A77C7B7C7BA07B7CA8FD0BFFA8A07B7C7BA07B7C7CFD14FFA77B7C7B7CA1%FD38FFA7A07CA07CA07CA0A8FD0CFFA77CA07CA07CA07CCFCACFA8CFA8CF%A8CFA8CFA8CFA8CFA8CFA8CFA8FFA0A07CA07CA7FD37FFA87C7BA07C7C7B%A0A7FD0CFFA075A07C7C7BA07C7C7BA07B7C7BA07B7C7BA07B7C7BA07B7C%7BA07B7C7BA07C7C7BA0A1FD36FFA8A07CA07CA07CA0A7FD0CFFA77BA07C%A07CA07CA07CA07CA07CA07CA07CA07CA07CA07CA07CA07CA07CA07CA07C%A07BA7FD35FFA8A075A07B7C7B7CA1FD0CFFA775A07B7C7BA07B7C7BA07B%7C7BA07B7C7BA07B7C7BA07B7C7BA07B7C7BA07B7C7BA07B7C7CFD35FFA7%7BA07CA07CA0A7FD0CFFA77BA07CA07CA07CA07CA07CA07CA07CA07CA07C%A07CA07CA07CA07CA07CA07CA07CA07CA07BA7FD34FFA77B7C7BA07C7C7C%FD0CFFA77B7C7BA07B7C7BA07B7C7BA07B7C7BA07B7C7BA07B7C7BA07B7C%7BA07B7C7BA07B7C7BA07B7B7CFD33FFA77BA07CA07CA0A0FD0DFFA0A7A7%A7A1A7A7A7A1A7A7A7A1A7A7A7A1A7A7A7A1A7A7A7A1A7A7A7A1A7A7A7A1%A7A7A7A1A7A1CAFD32FFA77B7C7BA07B7C7CFD67FFCA7CA07CA07CA07CFD%67FFA87BA07C7C7BA07CCFFD66FFCF7CA07CA07CA07BCFFD66FFCF7B7C7B%7C7B7C7BA8FD67FF7CA07CA07CA07CA8FD67FF7C7C7BA07C7C7BA7FD67FF%7CA07CA07CA07BA7FD67FF7C7C7BA07B7C75A7FD68FFA77BA07CA07BA7FD%6AFFA175A07BA0A8FD6BFFA77BA0CFFD6CFFA8A0A7FD6AFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)%AI8_PluginGroupInfo(Adobe Line Plugin Group) (Line artwork) (IdeaFileFormat.aip)%AI8_PluginGroupInfo(Adobe Sketch Plugin Group) (Sketch artwork) (IdeaFileFormat.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp12 Bn%AI5_BeginGradient: (Copper Radial)(Copper Radial) 1 4 Bd[0<0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B2C2D2D2E2F2F303131323333343536><242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263><0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B>1 %_Br<00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F10111112121313141515161617181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959><3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5><636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5><2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030303030303031313131313131313232323232323232323333333333333333343434343434343435353535353535353536363636363636363737373737373737383838383838383839393939393939393A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D>1 %_Br<595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E><B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9EAEB><F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E0><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F>1 %_Br[0 0.04 0.14 0 1 51.0204 0.395812 %_BS%_0 0.04 0.14 0 1 51.0204 0.395812 Bs0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs0.35 0.71 0.96 0.24 1 50 78.0899 %_BS%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs0.43 0.92 0.88 0.56 1 50 100 %_BS%_0.43 0.92 0.88 0.56 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Desert Sunset)(Desert Sunset) 0 6 Bd[<38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F7F7F80808080818181818282828282><5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5><2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F>01 %_Br<1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738><4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657><5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E>01 %_Br<050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D1E1EFF><2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F3FFF><7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A5958575655545352FF>01 %_Br<0000000000000000000101010101010101010101010101010101020202020202020202020202020202020303030303030303030303030303030304040404040404040404040404040405050505050505050505><7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B><9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C7B7B7A><0303020202020202020202020202020202020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000>1 %_Br<05050505050505050404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A><DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E><2928282726262524242322222121201F1F1E1D1D1C1B1B1A191918181716161514141312121111100F0F0E0D0D0C0B0B0A0A0908080706060504040303>1 %_Br[0.51 0.71 0.31 0 1 50 100 %_BS%_0.51 0.71 0.31 0 1 50 100 Bs0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs0.12 0.25 0.32 0 1 50 53.6679 %_BS%_0.12 0.25 0.32 0 1 50 53.6679 Bs0.02 0.17 0.48 0 1 48 38.764 %_BS%_0.02 0.17 0.48 0 1 48 38.764 Bs0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs0.02 0.57 0.86 0.16 1 50 0 %_BS%_0.02 0.57 0.86 0.16 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[00 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 1 1 50 0 %_BS%_0 0 0 1 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient)(Linear Gradient) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient)(Radial Gradient) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 Bs0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Soft Black Vignette)(Soft Black Vignette) 1 3 Bd[0.20.20.211 %_Br0.20.20.211 %_Br[0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs0.2 0.2 0.2 1 1 50 100 %_BS%_0.2 0.2 0.2 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 17)(Unnamed gradient 17) 0 6 Bd[<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br[0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 18)(Unnamed gradient 18) 1 6 Bd[<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br[0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 20)(Unnamed gradient 20) 0 2 Bd[<0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F4041424343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F8081828383848586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF><000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F70707172737374757676777879797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD><000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6>1 %_Br[0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 21)(Unnamed gradient 21) 0 5 Bd[<04050505050505050505050505060606060606060606060606070707070707070707070707070808080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101010101010101010101111111111111111111111111111111111111111111111111111121212121212121212121212121212121212121212121212121212121212121212121212121212131313131313131313131313131313FF><E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A69686867676665656464636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F4F4E4E4E4D4D4C4C4B4B4B4A4A49494948484847474646464545454444444343434342424241414141404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3DFF><FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7FF><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FF>1 %_Br<1414141414141414141414131313131313131313131313131313121212121212121212121212121211111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090808080808080808080808080808070707070707070707070707070707060606060606060606060606060605050505050505050505050505050504><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5><EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A19191919191919191919191919191919191919191918181818181818181818181818181818181818181717171717171717171717171717171717171717171616161616161616161616161616161616161616151515151515151515151515151515151515151515141414141414><848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C0B0B0A0A09080807070605050404030202010100><131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED>0.0000311 %_Br<C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F4041414242434344444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F8080818182838384><424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A191919181818181717171616161515151514141413131313>0.0000311 %_Br[0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 396)(Unnamed gradient 396) 1 2 Bd[0.0000310.0000310.0000310.0000311 %_Br[0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 72)(Unnamed gradient 72) 0 2 Bd[<CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECE><09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F202122222324242526272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F40404142424344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2>1 %_Br[0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs0.798978 0.033753 1 0.00119 1 50 0 %_BS%_0.798978 0.033753 1 0.00119 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Fish Pattern)(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [%AI3_Tile(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 96.7959 m157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 cf142.3477 90.6719 m142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C146.54 80.6494 142.3477 85.1709 142.3477 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 96.7959 m79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 cf64.5654 90.6719 m64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.874 64.1396 m13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c14.7539 66.1064 13.874 65.2266 13.874 64.1396 cf28.7969 58.0156 m28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c30.8857 52.1611 26.1396 47.416 20.2861 47.416 c19.9326 47.416 19.585 47.4355 19.2412 47.4688 C24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.6563 64.1396 m91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c95.5889 65.2266 94.709 66.1064 93.623 66.1064 c92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 cf106.5781 58.0156 m106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c103.9219 68.6152 108.668 63.8691 108.668 58.0156 c108.668 52.1611 103.9219 47.416 98.0684 47.416 c97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 31.4824 m157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 cf142.3477 25.3594 m142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C151.5596 35.9395 151.2109 35.959 150.8584 35.959 c145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C146.54 15.3359 142.3477 19.8574 142.3477 25.3594 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 31.4824 m79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 cf64.5654 25.3594 m64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C73.7773 35.9395 73.4297 35.959 73.0762 35.959 c67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-4138.5 4498.4351 m-3924.8999 4498.4351 L-3924.8999 4490.6343 L-4138.5 4490.6343 L-4138.5 4498.4351 Ln0 O0 0 0 1 k-4138.5 4494.5352 m-4128.4854 4497.0269 -4121.6865 4498.375 -4109.7007 4498.4351 c-4096.7188 4498.5 -4031.6997 4498.4351 y-3966.6816 4498.5 -3953.6997 4498.4351 v-3941.7124 4498.375 -3934.9136 4497.0269 -3924.8999 4494.5352 C-3934.9136 4492.0435 -3941.7124 4490.6953 -3953.6997 4490.6343 c-3966.6816 4490.5688 -4031.6997 4490.6343 y-4096.7188 4490.5688 -4109.7007 4490.6343 v-4121.6865 4490.6953 -4128.4854 4492.0435 -4138.5 4494.5352 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8011 8371 m-7913.2451 8371 L-7913.2451 8350.2842 L-8011 8350.2842 L-8011 8371 Ln0 O0 g1 XR-7913.5586 8366.3184 m-7928.8247 8352.5303 -7946.5537 8373.4492 -7961.9277 8361.166 C-7960.4199 8355.5137 -7954.7598 8362.4678 -7952.5176 8357.8213 C-7952.4341 8356.2207 -7955.6313 8357.7207 -7955.5127 8355.6006 C-7953.6245 8352.1914 -7948.8955 8352.6885 -7947.5664 8356.7373 C-7941.3115 8354.7676 -7934.7734 8348.8242 -7928.7847 8350.6172 C-7927.2671 8351.9678 -7928.0708 8353.1514 -7927.6211 8354.4277 C-7920.2871 8349.9922 -7911.4644 8359.1279 -7913.5586 8366.3184 Cf-7957.2842 8367.9326 m-7957.8247 8368.3086 -7956.9277 8369.4199 -7957.2529 8369.9082 C-7959.3237 8369.1563 -7961.6919 8365.0781 -7963.4731 8362.3105 C-7963.2632 8363.8398 -7964.6641 8365.1641 -7966.0781 8362.9326 C-7966.2383 8362.1152 -7965.3667 8361.8281 -7965.6729 8360.9365 C-7966.8306 8359.3682 -7967.8472 8360.8535 -7968.7798 8360.625 C-7969.3184 8359.8613 -7969.6143 8359.2188 -7969.6816 8358.6943 C-7963.5537 8355.874 -7956.9263 8367.6768 -7950.7456 8368.1025 C-7950.9048 8371.1152 -7954.8555 8372.8008 -7957.2842 8367.9326 Cfuu0 XR-7954.1602 8362.6602 m-7969.0142 8356.1201 -7990.4731 8360.3418 -8006.3687 8360.3193 c-8012.2988 8360.3125 -8001.8965 8360.3213 -8007.8267 8360.3262 cN0 O0 g-7951.8052 8361.4395 m-7969.1475 8354.2637 -7988.9341 8359.0557 -8007.0532 8358.9863 C-8007.8608 8359.873 -8008.6685 8360.7617 -8009.4751 8361.6475 C-8008.6973 8361.6475 -8007.9194 8361.6465 -8007.1421 8361.6533 C-8006.3345 8360.7656 -8005.5273 8359.8789 -8004.7202 8358.9922 C-8005.3516 8359.002 -8005.9844 8358.9951 -8006.6157 8358.9951 c-8008.3735 8358.998 -8012.9165 8361.6621 -8009.0376 8361.6572 c-8008.4063 8361.6572 -8007.7734 8361.6641 -8007.1421 8361.6533 c-8005.4155 8361.626 -8000.8184 8359.0234 -8004.7202 8358.9922 c-8005.4976 8358.9834 -8006.2759 8358.9863 -8007.0532 8358.9863 c-8008.8081 8358.9854 -8013.3574 8361.6328 -8009.4751 8361.6475 c-7992.1177 8361.7148 -7973.1025 8357.0137 -7956.5151 8363.8789 c-7955.1035 8364.4639 -7949.8081 8362.2666 -7951.8052 8361.4395 c-7951.8052 8361.4395 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 2)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7993 8371 m-8011 8371 L-8011 8353 L-7993 8353 L-7993 8371 Lnuu0 Ap0 O0 0 0 1 k-7992.9658 8363.4375 m-8011 8363.4375 L-8011 8360.5625 L-7992.9658 8360.5625 L-7992.9658 8363.4375 L-7992.9658 8363.4375 LfUu0.15 1 0.9 0.1 k-7992.9658 8362.7002 m-8009.5 8362.7002 L-8009.5 8361.3008 L-7992.9658 8361.3008 L-7992.9658 8362.7002 L-7992.9658 8362.7002 LfUu0 1 1 0 k-7992.9658 8362.3125 m-8008.5 8362.3125 L-8008.5 8361.6865 L-7992.9658 8361.6865 L-7992.9658 8362.3125 L-7992.9658 8362.3125 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 3)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7993 8371 m-8011 8371 L-8011 8353 L-7993 8353 L-7993 8371 Lnuu0 Ap0 O0 0 0 1 k-7993 8363.4375 m-8011 8363.4375 L-8011 8360.5625 L-7993 8360.5625 L-7993 8363.4375 L-7993 8363.4375 LfUu0.15 1 0.9 0.1 k-7993 8362.7002 m-8011 8362.7002 L-8011 8361.3008 L-7993 8361.3008 L-7993 8362.7002 L-7993 8362.7002 LfUu0 1 1 0 k-7993 8362.3125 m-8011 8362.3125 L-8011 8361.6865 L-7993 8361.6865 L-7993 8362.3125 L-7993 8362.3125 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-8010.8833 8370.9551 m-7919.0479 8370.9551 L-7919.0479 8366.6758 L-8010.8833 8366.6758 L-8010.8833 8370.9551 Ln0 O0 0 0 1 k-8010.6631 8368.2754 m-8011 8368.3418 -8010.4814 8368.5313 -8010.8833 8368.3887 C-8010.8379 8368.2705 -8010.7725 8368.1816 -8010.6631 8368.2754 Cf-7920.1675 8368.4414 m-7921.2524 8369.2041 -7922.6816 8368.4336 -7923.8701 8368.9199 C-7924.0098 8368.9521 -7923.8345 8368.502 -7924.1484 8368.6025 C-7925.3008 8369.1953 -7927.1162 8368.8418 -7928.5195 8368.3848 C-7928.4346 8368.2666 L-7928.7017 8368.1816 -7929.0283 8368.5723 -7929.3115 8368.5176 C-7929.3135 8368.4395 -7929.2207 8368.4063 -7929.2861 8368.2988 C-7929.3574 8368.5352 -7929.7983 8368.4082 -7929.9185 8368.584 C-7930.0303 8368.4922 -7930.0195 8368.3047 -7930.1641 8368.2012 C-7930.3262 8368.4697 L-7930.7769 8369.1094 -7931.4209 8368.4258 -7932.0361 8368.7559 C-7932.0063 8368.6934 -7931.9453 8368.6445 -7931.9941 8368.584 C-7932.9814 8368.9727 -7934.2168 8368.9004 -7935.3208 8369.043 C-7935.2769 8368.9482 -7935.2363 8368.7754 -7935.3008 8368.668 C-7935.3555 8368.9512 -7935.6963 8369.0225 -7935.9922 8369.0781 C-7936.1255 8368.7871 -7936.4995 8369.3438 -7936.8467 8369.1836 C-7936.8169 8369.1191 L-7937.0732 8369.4238 -7937.1973 8368.9434 -7937.4053 8369.3086 C-7937.5684 8369.0801 L-7937.6807 8369.4902 -7937.9395 8368.8672 -7938.1514 8369.0762 C-7938.1445 8369.1602 L-7938.3442 8369.2598 -7938.4482 8369.0537 -7938.6338 8369.123 C-7938.6514 8369.0762 L-7939.0854 8369.1836 -7939.3379 8368.9551 -7939.3271 8369.2754 C-7939.4795 8369.0186 -7938.9063 8369.1582 -7939.1455 8368.7852 C-7940.5732 8369.1152 -7942.0459 8369.0508 -7943.4834 8369.0566 C-7943.6465 8368.9277 -7943.7505 8368.8887 -7943.7871 8368.7676 C-7943.9307 8368.832 -7944.3281 8368.8262 -7944.4585 8368.9902 C-7944.4102 8368.9834 -7944.5513 8368.8262 -7944.6274 8368.8105 C-7944.8887 8368.6895 -7944.9131 8369.1621 -7945.2002 8369.0186 C-7945.0859 8368.9336 -7945.0469 8368.8301 -7945.0854 8368.7109 C-7945.3301 8368.9609 -7945.6577 8368.9209 -7945.9473 8369.002 C-7945.9023 8368.9482 -7945.8325 8368.916 -7945.8433 8368.8154 C-7946.1602 8369.0986 -7946.4209 8368.7559 -7946.6982 8368.9346 C-7946.5947 8368.75 L-7947.0415 8368.5254 -7946.7266 8369.1367 -7947.1128 8369.0039 C-7947.02 8368.9453 -7947.0527 8368.873 -7947.0361 8368.7979 C-7947.3965 8369.1338 -7947.9795 8369.0225 -7948.3389 8369.1367 C-7948.3174 8369.1113 -7948.3232 8369.0605 Y-7948.7148 8369.1025 -7949.1245 8368.998 -7949.5552 8369.1445 C-7949.7119 8369.0625 -7949.5039 8368.6934 -7949.9185 8368.7617 C-7949.9033 8369.1328 -7950.6221 8368.9141 -7950.3779 8369.334 C-7950.7319 8369.2734 -7951.2925 8369.1338 -7951.5283 8369.2598 C-7951.3691 8369.1191 -7951.7007 8368.8066 -7951.4063 8368.7754 C-7951.6289 8368.5498 L-7951.5957 8368.3984 -7951.3999 8368.6016 -7951.4707 8368.4102 C-7951.6182 8368.4258 -7952.0479 8368.5723 -7952.1797 8368.5117 C-7952.4531 8368.7393 -7952.7041 8369.1641 -7953.1465 8369.2109 C-7952.9385 8369.0664 -7953.2646 8368.8018 -7953.1235 8368.7383 C-7953.7407 8369.4492 L-7953.8877 8369.4668 -7953.7725 8369.1563 -7953.9854 8369.2529 C-7953.9746 8369.3516 -7954.0674 8369.4121 -7954.1318 8369.4922 C-7954.1875 8369.4492 -7954.7441 8369.584 -7954.8081 8369.2188 C-7954.8735 8369.0762 -7954.5684 8369.1426 -7954.7314 8369.0117 C-7955.0029 8369.0156 -7955.0151 8369.1406 -7955.2871 8369.1465 C-7955.2925 8369.0977 L-7955.4717 8369.043 -7955.8213 8369.2529 -7955.6265 8369.4551 C-7955.5015 8369.4668 -7955.6738 8369.2354 -7955.4888 8369.3418 C-7955.6152 8369.5537 -7955.9312 8369.6133 -7956.2031 8369.6172 C-7956.1104 8369.5586 -7956.1216 8369.4609 -7956.0845 8369.3574 C-7956.4497 8369.6445 -7956.8369 8369.7354 -7957.2451 8369.8555 C-7957.2515 8370.0293 -7957.0928 8369.5391 -7957.0327 8369.6309 C-7957.5557 8369.3896 -7958.1128 8369.9727 -7958.5479 8369.6201 C-7958.4766 8369.5898 -7958.5098 8369.8672 -7958.5146 8369.8184 C-7958.7666 8369.7969 -7958.7549 8369.5449 -7958.9189 8369.6377 C-7958.9355 8369.4902 -7959.1255 8369.6855 -7959.2944 8369.7305 C-7959.3818 8369.8369 -7959.3384 8369.6582 -7959.1914 8369.6426 C-7959.4268 8369.7676 -7960.3691 8369.9941 -7960.9131 8369.7793 C-7960.9023 8369.877 -7961.2471 8370.1377 -7961.3721 8370.127 C-7961.3232 8369.8984 L-7961.4375 8369.7617 -7961.7422 8369.918 -7961.7632 8369.7227 C-7962.0303 8370 -7960.7344 8369.4863 -7961.0957 8369.7002 C-7961.1895 8369.5098 -7961.5991 8370.0645 -7961.5215 8369.7529 C-7961.7725 8369.7617 -7962.0161 8370.0186 -7962.2559 8369.8047 C-7962.1865 8369.8418 -7962.0522 8369.4873 -7962.2549 8369.5039 C-7962.6123 8369.5449 -7962.3564 8369.6133 -7962.6465 8369.6895 C-7962.8281 8369.7832 L-7962.8398 8370.0059 -7963.1475 8369.7529 -7963.0146 8370.002 C-7963.0586 8369.8184 -7963.5337 8370.1152 -7963.4971 8369.7461 C-7963.4473 8369.4551 L-7963.6016 8369.4766 -7963.7002 8369.7617 -7963.8213 8369.8896 C-7963.8418 8369.8633 -7963.8823 8369.8047 -7963.8745 8369.7578 C-7963.8994 8370.2031 -7964.2432 8369.7207 -7964.4268 8370.0645 C-7964.7505 8369.9102 -7965.2495 8370.0508 -7965.4023 8369.7734 C-7965.6514 8369.9082 -7965.8784 8370.0684 -7966.1621 8369.9727 C-7966.1055 8369.9307 -7966.0283 8369.918 -7966.0122 8369.8223 C-7966.1904 8369.6914 -7966.2344 8369.8086 -7966.3975 8369.8809 C-7966.3608 8369.8145 -7966.7539 8369.6201 -7966.9521 8369.4629 C-7967.1992 8369.5957 -7967.1143 8369.8359 -7967.1392 8369.9824 C-7967.3652 8369.543 -7967.8379 8370.2656 -7968.1211 8369.8672 C-7968.0352 8369.8066 -7967.7598 8369.6514 -7967.9658 8369.541 C-7968.1919 8369.1025 -7968.4219 8369.8652 -7968.7861 8369.6543 C-7968.6968 8370.0186 L-7968.8594 8369.793 -7969.2334 8370.2305 -7969.1963 8369.8594 C-7969.3184 8369.9902 -7969.6265 8369.7383 -7969.5859 8370.0938 C-7970.1846 8369.793 -7971.0425 8370.2754 -7971.4102 8369.6377 C-7971.4961 8369.6973 -7971.7104 8369.6367 -7971.6665 8369.8193 C-7971.5239 8370.0176 -7971.4673 8369.6777 -7971.4141 8369.8125 C-7971.4912 8369.8232 -7971.5078 8369.9209 -7971.5161 8369.9697 C-7971.7021 8369.8887 -7971.8486 8369.8633 -7971.6729 8369.5674 C-7972.0869 8369.3477 -7972.1001 8370.1719 -7972.6274 8370.0332 C-7972.6035 8369.8857 -7972.6436 8369.8301 -7972.7979 8369.8535 C-7973.0903 8370.1055 L-7973.4312 8370.0469 -7973.2842 8369.7705 -7973.2925 8369.5215 C-7973.4746 8369.5645 -7973.6973 8369.5527 -7973.7803 8369.7383 C-7974.0015 8369.4258 L-7973.8398 8369.6514 -7974.1514 8369.5762 -7974.2368 8369.6367 C-7974.1514 8369.5762 L-7974.1846 8369.4697 -7974.3955 8369.5352 -7974.5024 8369.5664 C-7974.4766 8369.7207 -7974.2617 8369.7832 -7974.1445 8369.8281 C-7974.2373 8369.9375 -7974.3823 8369.9121 -7974.5059 8370.041 C-7974.4648 8369.7969 -7974.8027 8369.8672 -7974.9473 8369.8418 C-7975.1133 8369.7891 -7975.1348 8370.0605 -7975.1831 8370.0527 C-7975.1875 8369.9258 -7975.4541 8370.0313 -7975.3247 8369.8535 C-7975.2681 8369.8125 -7975.1953 8369.9766 -7975.1016 8369.8652 C-7975.2109 8369.7705 -7975.1982 8369.5498 -7975.4258 8369.7109 C-7975.5967 8369.832 -7975.3818 8370.1934 -7975.7061 8370.0391 C-7975.6211 8369.9785 -7975.6055 8369.8809 -7975.5391 8369.793 C-7975.8433 8369.666 L-7975.8564 8369.8887 L-7975.8975 8369.832 -7975.8691 8369.8125 -7975.8877 8369.7832 C-7975.9785 8370.0176 -7976.3521 8369.8555 -7976.4209 8370.1191 C-7976.5742 8370.1426 -7976.7441 8369.9648 -7976.8906 8369.9395 C-7976.8623 8369.9199 L-7977.0415 8369.7891 -7977.2793 8369.875 -7977.4297 8370.0254 C-7977.4219 8369.9766 L-7977.5195 8369.959 -7977.7505 8369.9941 -7977.8735 8370.125 C-7978.1201 8369.957 -7977.9561 8369.2842 -7978.2295 8369.5645 C-7978.48 8369.5723 -7978.6221 8369.9727 -7978.5215 8370.1152 C-7978.9717 8369.9648 -7979.4834 8370.3281 -7979.9009 8369.9824 C-7979.9658 8370.0723 -7979.9248 8370.1289 -7980.0586 8370.1816 C-7980.7197 8370.0938 -7981.4551 8370.4453 -7981.9814 8370.0078 C-7981.79 8369.9141 -7981.9688 8369.7852 -7981.9727 8369.6582 C-7982.1309 8369.8574 -7982.1631 8369.4512 -7982.2197 8369.793 C-7982.2041 8369.9941 -7982.2197 8370.0918 -7982.0337 8370.1729 C-7982.4282 8370.2813 -7983.0283 8370.2813 -7983.2471 8370.0938 C-7983.1377 8370.1865 -7983.2227 8370.248 -7983.3086 8370.3086 C-7983.2803 8369.9873 -7983.5713 8369.9395 -7983.7915 8370.0527 C-7983.8223 8370.248 L-7983.9658 8370.0469 L-7984.0503 8370.1094 -7984.0591 8370.457 -7984.2773 8370.2695 C-7984.2891 8370.1934 -7984.3018 8370.1162 -7984.3418 8370.0605 C-7984.5693 8370.2207 -7984.8906 8370.4922 -7985.1377 8370.3262 C-7985.3398 8370.041 L-7985.4453 8370.0723 -7985.6235 8370.2441 -7985.4375 8370.3262 C-7985.8594 8370.1543 -7986.1309 8370.1328 -7986.2646 8369.8857 C-7986.9912 8370.4873 -7988.0459 8370.5117 -7988.8906 8370.4688 C-7988.8652 8370.3223 L-7989.0923 8370.1855 -7988.9834 8370.5781 -7989.1416 8370.4766 C-7989.0684 8370.3369 -7989.3145 8370.1729 -7989.1362 8370.002 C-7989.4609 8369.8477 -7989.5547 8370.2559 -7989.7656 8370.3223 C-7989.7979 8370.5146 -7989.5957 8370.1992 -7989.6367 8370.4434 C-7989.6729 8370.5117 -7990.0859 8370.293 -7990.1362 8370.584 C-7990.2178 8370.4697 -7990.1543 8370.2559 -7990.1104 8370.1377 C-7990.3086 8370.2793 L-7990.5513 8369.9395 -7989.7559 8369.6719 -7990.0107 8369.2529 C-7990.1934 8369.2988 L-7990.3682 8368.9941 -7989.71 8368.9551 -7990.1689 8368.8506 C-7990.3682 8368.9941 -7990.5381 8369.416 -7990.3608 8369.5449 C-7990.7754 8369.625 -7990.5527 8370.2383 -7990.9985 8370.2139 C-7991.1201 8370.043 -7990.6416 8370.1729 -7990.7275 8369.9336 C-7990.9375 8369.6992 -7991.1484 8370.0645 -7991.3354 8369.9824 C-7991.1279 8370.0918 -7991.3032 8370.3857 -7991.4375 8370.4395 C-7991.6641 8370.3018 -7991.29 8370.1641 -7991.6113 8370.1338 C-7991.6641 8370.3018 -7991.9595 8370.4277 -7991.7041 8370.5449 C-7991.8203 8370.9258 -7992.0381 8370.4395 -7992.2129 8370.7344 C-7992.3174 8370.4668 -7991.8823 8370.1152 -7992.2354 8369.9814 C-7992.1792 8370.2393 -7992.6704 8370.332 -7992.4839 8370.7148 C-7992.6221 8370.6406 -7992.6367 8370.4375 -7992.5361 8370.2793 C-7992.7334 8370.1201 -7993.0151 8370.75 -7993.0801 8370.2383 C-7993.1479 8370.502 L-7993.21 8370.416 -7993.2983 8370.3516 -7993.3994 8370.209 C-7993.5732 8370.2041 -7993.96 8370.5664 -7993.9443 8370.168 C-7994 8370.209 -7994.3975 8370.1914 -7994.2441 8370.4668 C-7993.9971 8370.6348 -7993.96 8370.2656 -7993.8223 8370.6377 C-7993.9971 8370.334 -7994.1787 8370.6777 -7994.3213 8370.7793 C-7994.3447 8370.625 L-7994.4297 8370.6855 -7994.6255 8370.6514 -7994.6787 8370.8184 C-7994.6133 8370.7305 -7994.6475 8370.625 -7994.7148 8370.5879 C-7994.8042 8370.8223 L-7995.1494 8370.9395 -7994.8857 8370.4102 -7995.2217 8370.4785 C-7994.9663 8370.2969 L-7995.0225 8370.3359 -7995.1367 8370.1162 -7995.2979 8370.1895 C-7995.3604 8370.4033 -7995.4775 8370.6602 -7995.5313 8370.8262 C-7995.7207 8370.9199 -7995.6162 8370.585 -7995.8027 8370.8047 C-7995.5586 8370.5469 L-7995.5215 8370.4766 -7995.7231 8370.1934 -7995.9761 8370.1992 C-7996.1377 8370.2734 -7996.3887 8370.582 -7996.1338 8370.6992 C-7996.2607 8370.7031 -7996.4385 8370.5723 -7996.3379 8370.416 C-7996.6255 8370.4902 -7996.2998 8370.6465 -7996.5479 8370.7793 C-7996.6494 8370.6367 -7996.9658 8370.4336 -7997.1563 8370.2266 C-7996.8975 8369.8682 L-7997.0693 8369.8652 L-7996.8467 8369.5781 -7997.1826 8369.6465 -7997.0566 8369.3438 C-7997.1743 8369.2969 -7997.3169 8369.3994 -7997.4307 8369.4785 C-7997.0864 8369.9629 -7997.8159 8370.1406 -7997.7158 8370.582 C-7998.1875 8370.7031 -7998.0107 8369.5078 -7998.5024 8370.1992 C-7998.4219 8370.3145 -7998.6533 8370.6504 -7998.3564 8370.5225 C-7998.6494 8370.4746 -7998.5557 8370.9658 -7998.9014 8370.7832 C-7998.6455 8370.6016 -7999.1763 8370.3359 -7998.8066 8370.0723 C-7998.8311 8370.2188 -7998.6001 8370.1836 -7998.5435 8370.1426 C-7998.6641 8369.9727 -7998.5186 8369.6973 -7998.8184 8369.6973 C-7999.0015 8369.7393 -7999.2524 8369.748 -7999.2158 8369.9785 C-7999.2085 8370.2314 -7998.9365 8369.9512 -7999.0537 8370.207 C-7999.4185 8370.2949 -7999.4795 8369.9102 -7999.6304 8370.3594 C-7999.3999 8370.3232 -7999.3423 8370.584 -7999.3467 8370.7578 C-7999.6143 8370.8633 L-7999.5625 8370.6953 L-7999.9922 8370.5742 -7999.6895 8371 -8000.1055 8370.9551 C-8000.3008 8370.623 L-8000.2017 8370.3369 -7999.6953 8370.75 -7999.7695 8370.2842 C-8000.04 8370.2656 -8000.1299 8370.502 -8000.3848 8370.3818 C-8000.3281 8370.3418 -8000.2505 8370.3301 -8000.1943 8370.2891 C-8000.2915 8370.2734 -8000.3877 8369.6563 -8000.7734 8370.0176 C-8000.9727 8370.1582 -8000.8262 8370.1836 -8000.8311 8370.3574 C-8001.2656 8370.4102 -8001.3955 8370.5879 -8001.6753 8370.6152 C-8001.6177 8370.2754 -8002.1699 8370.582 -8001.8608 8370.2344 C-8001.7188 8370.4336 -8001.0903 8370.4141 -8000.9365 8370.0898 C-8001.0947 8369.6865 -8000.5952 8370.1465 -8000.5024 8369.7383 C-8000.8506 8369.7285 -8000.8335 8369.332 -8000.8896 8369.0723 C-8000.9863 8369.0537 -8001.0801 8369.1641 -8001.1377 8369.2041 C-8001.1787 8369.4492 -8001.0522 8369.4453 -8001.0449 8369.6973 C-8001.4336 8369.6309 -8001.8081 8369.7676 -8002.0225 8370.0059 C-8002.1523 8369.8848 -8002.1113 8369.6406 -8001.9575 8369.6172 C-8002.4199 8369.6895 -8002.9141 8369.6563 -8003.3535 8369.582 C-8003.0693 8369.9814 -8003.8433 8369.6758 -8003.6494 8370.0078 C-8003.4141 8370.0977 -8003.2119 8370.3818 -8003.3418 8370.5605 C-8003.4888 8370.5352 -8003.3369 8370.3857 -8003.3984 8370.3008 C-8003.5859 8370.5186 -8003.6895 8369.9512 -8003.8735 8370.2949 C-8003.4512 8370.166 -8003.7915 8369.8086 -8003.7139 8369.4961 C-8004.0186 8369.6719 -8003.7007 8369.2734 -8004.0024 8369.2734 C-8004.3057 8369.4473 -8004.6787 8369.584 -8005.0161 8369.6514 C-8005.4399 8369.3555 -8006.0898 8369.6465 -8006.4683 8369.6582 C-8006.6665 8369.5 -8006.5322 8369.1465 -8006.7471 8369.085 C-8006.9995 8369.0918 -8006.5601 8369.4668 -8006.9336 8369.3047 C-8006.8975 8369.2344 L-8007.0107 8369.3164 -8007.5825 8368.9941 -8007.6929 8369.502 C-8007.5776 8369.1191 L-8007.6475 8369.084 -8007.7119 8369.1719 -8007.7695 8369.2129 C-8007.7725 8369.0879 -8007.8535 8368.9746 -8007.7402 8368.8926 C-8007.9707 8368.6289 -8008.2241 8368.9346 -8008.4746 8368.9453 C-8008.3135 8369.1719 L-8008.7422 8369.3496 -8009.0293 8369.125 -8009.4443 8369.2041 C-8009.4316 8368.9824 L-8009.6787 8369.1152 L-8009.6182 8368.9004 -8009.8447 8368.7617 -8009.9751 8368.9414 C-8009.3335 8368.3984 L-8009.1553 8368.5293 -8009.5283 8368.666 -8009.4165 8368.8848 C-8009.3213 8369.0762 -8008.9375 8369.0156 -8008.8755 8368.8018 C-8009.0225 8368.7773 -8009.0293 8368.8262 -8009.1436 8368.9063 C-8009.1919 8368.5977 -8008.9688 8368.6094 -8008.8584 8368.4033 C-8008.9355 8368.416 -8009.0449 8368.3223 -8009.0615 8368.4199 C-8008.9102 8368.2695 -8008.7578 8368.2461 -8008.5059 8368.2383 C-8008.6763 8368.3594 -8008.4131 8368.4297 -8008.4775 8368.5176 C-8008.4575 8368.2461 -8008.2168 8368.1621 -8007.9053 8368.2383 C-8007.6831 8368.5527 -8007.3208 8368.0361 -8006.96 8368.123 C-8007.1064 8368.3984 -8007.2935 8368.6191 -8007.5127 8368.7305 C-8007.2861 8368.8682 -8007.2607 8368.7227 -8007.0337 8368.8613 C-8006.9238 8368.6563 -8006.8457 8368.3418 -8006.5503 8368.2168 C-8006.5342 8368.4199 L-8006.2666 8368.3164 -8006.2666 8368.0156 -8005.9258 8368.0723 C-8005.3418 8368.1719 -8004.7407 8368.1719 -8004.2949 8368.1973 C-8004.2783 8368.3994 L-8004.0303 8367.9658 -8003.4521 8368.2393 -8003.1182 8368.0469 C-8002.5503 8368.2422 -8001.8848 8367.8535 -8001.5938 8368.2031 C-8000.5913 8368.0469 -7999.7148 8367.8945 -7998.6768 8367.9688 C-7998.8516 8368.2637 L-7998.6655 8368.0469 -7998.7305 8368.4336 -7998.5479 8368.3896 C-7998.7578 8368.1543 -7998.2949 8368.084 -7998.1665 8367.9033 C-7997.7041 8368.1328 -7997.1104 8367.8828 -7996.7007 8367.6758 C-7996.6846 8367.8789 L-7996.2705 8367.498 -7995.7759 8367.832 -7995.2598 8367.8945 C-7995.2007 8367.9785 -7995.1074 8368.1689 -7994.9536 8368.1465 C-7994.6738 8367.8184 -7994.5273 8367.8418 -7994.1167 8367.6367 C-7993.8169 8367.6367 -7993.3301 8367.7178 -7993.0254 8367.8457 C-7991.8975 8367.3848 -7990.7456 8367.6797 -7989.5732 8367.4023 C-7989.4888 8367.6406 L-7988.3521 8367.1309 -7986.9541 8367.5938 -7985.9839 8367.332 C-7986.0776 8367.7393 L-7985.7734 8367.8652 -7985.3843 8367.6328 -7985.4619 8367.3438 C-7985.1567 8367.4688 -7984.7007 8367.1465 -7984.5068 8367.4814 C-7984.1953 8367.5566 -7984.1255 8367.293 -7983.8662 8367.2383 C-7983.2422 8367.3926 -7983.0107 8367.3574 -7982.4224 8367.2813 C-7982.5684 8367.2559 L-7982.6328 8367.3457 -7982.6387 8367.5186 -7982.4922 8367.5449 C-7982.2725 8367.4316 -7981.6846 8367.6543 -7981.9033 8367.168 C-7981.2754 8367.4492 -7980.4385 8366.9395 -7979.8271 8367.3184 C-7979.8789 8367.1855 -7979.7246 8367.1602 -7979.6602 8367.0703 C-7979.1089 8367.0645 -7978.5293 8367.3359 -7978.0898 8367.1094 C-7978.0024 8367.1758 -7978.2295 8367.3359 -7978.0049 8367.3496 C-7977.8721 8367.2988 -7978.0024 8367.1758 -7977.8384 8367.1016 C-7976.9453 8366.8535 -7976.0303 8367.3574 -7975.2188 8367.293 C-7973.7754 8367.0361 -7972.2695 8367.166 -7970.8867 8367.123 C-7970.9023 8367.2207 L-7970.4395 8366.8477 -7969.8159 8367.6025 -7969.4463 8367.041 C-7969.3369 8367.1338 -7969.0283 8367.085 -7969.1094 8367.2734 C-7968.7407 8367.0098 -7968.0771 8367.5215 -7967.5439 8367.1865 C-7967.5928 8367.1777 -7967.6211 8367.1973 -7967.6777 8367.2393 C-7967.1392 8367.4551 -7966.6641 8367.1602 -7966.0957 8367.3555 C-7966.1533 8367.3975 -7966.2583 8367.4277 -7966.2754 8367.5254 C-7966.0557 8367.7129 -7965.7549 8367.1133 -7965.6348 8367.584 C-7965.5088 8367.5801 -7965.5449 8367.3477 -7965.6221 8367.3613 C-7964.3779 8367.5449 -7963.0498 8367.2441 -7961.7549 8367.1367 C-7960.8271 8367.418 -7961.6982 8367.9297 -7960.9663 8367.5781 C-7960.9063 8367.6689 -7960.9229 8367.3984 -7960.9131 8367.4961 C-7960.6299 8367.3643 -7960.4717 8368.0215 -7960.2754 8367.7754 C-7960.3564 8367.4863 -7960.1445 8367.6133 -7960.1387 8367.4375 C-7959.5713 8367.625 -7959.4575 8367.8857 -7959.0098 8367.666 C-7959.0435 8367.8184 L-7958.5186 8367.3887 -7957.9102 8367.6191 -7957.4673 8367.123 C-7954.5728 8367.0332 -7951.7983 8366.7578 -7948.9761 8366.7002 C-7946.1865 8366.7949 -7943.4551 8366.5723 -7940.6221 8366.8359 C-7939.9585 8367.2354 -7939.9087 8367.2246 -7939.1797 8367.0625 C-7939.2095 8367.127 -7939.2549 8367.1426 -7939.2061 8367.2031 C-7939.1699 8366.875 -7938.6929 8367.1719 -7938.6235 8366.8594 C-7937.5762 8366.9199 -7936.6113 8366.8301 -7935.5337 8366.8281 C-7935.7041 8366.8633 -7935.7896 8367.1309 -7935.5869 8367.1094 C-7935.3755 8366.9004 L-7935.3408 8366.9922 L-7935.2021 8366.9434 -7935.0513 8366.7813 -7935.1943 8366.6758 C-7932.4873 8366.3926 -7929.8242 8367.0508 -7927.1729 8366.9697 C-7926.5435 8367.1064 -7925.6475 8366.9814 -7924.9629 8366.9141 C-7922.9355 8367.3516 -7921.1079 8367.7041 -7919.0479 8367.3984 C-7919.3169 8368.2461 -7920.1675 8368.4414 Vf-8010.2578 8368.2422 m-8010.1855 8368.4063 -8009.9497 8368.4961 -8010.1377 8368.7148 C-8010.1611 8368.5605 -8010.2822 8368.3887 -8010.2578 8368.2422 Cf-8003.9619 8369.9297 m-8003.9536 8369.8809 -8003.8721 8369.9961 -8003.8521 8370.0225 C-8003.9297 8370.0352 -8004.0024 8370.1729 -8004.0645 8370.0879 C-8003.9854 8370.0762 -8003.9976 8369.998 -8003.9619 8369.9297 Cf-8002.3521 8370.0273 m-8002.3765 8370.1729 -8002.7207 8370.2891 -8002.9238 8370.3066 C-8002.3521 8370.0273 Lf-8000.8521 8370.6289 m-8000.7227 8370.752 -8000.7583 8370.8193 -8000.9326 8370.8154 C-8000.9453 8370.7383 -8000.8877 8370.6992 -8000.8521 8370.6289 Cf-8000.7456 8370.2969 m-8000.6211 8370.293 -8000.5591 8370.3789 -8000.4985 8370.4629 C-8000.5029 8370.3369 -8000.7871 8370.541 -8000.7456 8370.2969 Cf-7997.4893 8370.7207 m-7997.4111 8370.709 -7997.2417 8370.5879 -7997.1689 8370.75 C-7997.2505 8370.6367 -7997.5498 8370.9346 -7997.4893 8370.7207 Cf-7995.9761 8370.5 m-7995.9272 8370.5098 -7995.9072 8370.5361 -7995.8506 8370.4961 C-7995.7607 8370.5625 -7995.8555 8370.6689 -7995.9312 8370.6826 C-7995.9761 8370.5 Lf-7968.4287 8369.9141 m-7968.5923 8369.9863 L-7968.5684 8369.8418 L-7968.4287 8369.9141 Lf-7956.3574 8369.9063 m-7956.1943 8369.8145 -7956.2441 8370.043 -7956.2168 8370.0645 C-7956.3643 8370.0801 -7956.1621 8369.8848 -7956.3574 8369.9063 Cf-7949.8486 8369.1777 m-7949.8984 8369.1816 L-7949.8818 8368.8828 L-7949.8486 8369.1777 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 5)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7993 8371 m-8011 8371 L-8011 8353 L-7993 8353 L-7993 8371 Lnuu0 Ap0 O0 0 0 1 k-8000.5625 8371 m-8003.4375 8371 L-8003.4375 8362.5 L-8003.4375 8361.4316 -8002.5684 8360.5625 -8001.5 8360.5625 C-7992.9165 8360.5625 L-7992.9165 8363.4375 L-8000.5625 8363.4375 L-8000.5625 8371 L-8000.5625 8371 LfUu0.15 1 0.9 0.1 k-8001.2998 8371 m-8002.7002 8371 L-8002.7002 8362.5 L-8002.7002 8361.8389 -8002.1621 8361.3008 -8001.5 8361.3008 C-7992.9165 8361.3008 L-7992.9165 8362.7002 L-8001.2998 8362.7002 L-8001.2998 8371 L-8001.2998 8371 LfUu0 1 1 0 k-8001.6875 8371 m-8002.3125 8371 L-8002.3125 8362.5 L-8002.3125 8362.0527 -8001.9482 8361.6865 -8001.5 8361.6865 C-7992.9165 8361.6865 L-7992.9165 8362.3125 L-8001.5 8362.3125 L-8001.6035 8362.3125 -8001.6875 8362.3975 -8001.6875 8362.5 C-8001.6875 8371 L-8001.6875 8371 LfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7984.9727 8371 m-7984.9727 8344.9717 L-8011 8344.9717 L-8011 8371 L-7984.9727 8371 Ln0 Ap0 R0.7084 0.636438 0.515526 0.381872 K1.125 w-8011 8353.6465 m-7984.9727 8353.6465 lS0.64 0.650477 0.701045 0.510735 K-8011 8362.3242 m-7984.9727 8362.3242 lS0.597742 0.537865 0.64184 0.350469 K0.375 w-8011 8357.9854 m-7984.9727 8357.9854 lS0 O0.597742 0.537865 0.64184 0.350469 k1 w-7989.5742 8358.0117 m-7989.3442 8357.7402 -7989.6914 8357.4541 -7990 8357.2432 c-7990.1118 8357.166 -7990.5215 8357.3789 -7990.7466 8357.2129 c-7991.0439 8356.9951 -7991.1826 8356.9082 -7991.4824 8356.9141 c-7991.6455 8356.918 -7992.0435 8357.0479 -7992.1895 8357.0781 c-7992.5679 8357.1543 -7992.8022 8357.3516 -7993.3672 8357.2549 c-7993.7344 8357.1914 -7993.8286 8357.1006 -7993.9233 8357.1484 c-7994.1118 8357.29 -7994.2202 8357.5137 -7994.4258 8357.5625 c-7994.9575 8357.6895 -7995.3535 8357.7334 -7995.8818 8357.7227 c-7996.3047 8357.7129 -7997.4185 8357.7813 -7998.2866 8357.6816 c-7998.6226 8357.6416 -7998.6025 8357.2168 -7998.7695 8357.2129 c-7998.8618 8357.2109 -7998.7646 8357.5264 -7998.8306 8357.5469 c-7999.1694 8357.6533 -7999.4702 8356.5029 -7999.6943 8356.5723 c-7999.8047 8356.6074 -7999.5562 8357.1533 -7999.6729 8357.1816 c-7999.8975 8357.2373 -8000.2178 8356.2188 -8000.4321 8356.2813 c-8000.5635 8356.3184 -8000.2886 8356.7383 -8000.4375 8356.8066 c-8000.6655 8356.9111 -8000.9087 8356.0352 -8001.1064 8356.1338 C-8001.1543 8356.1816 -8000.7295 8356.9375 -8001.1685 8356.8789 c-8001.2871 8356.8613 -8001.5054 8356.3135 -8001.5801 8356.3398 c-8001.6919 8356.3799 -8001.3535 8356.8018 -8001.4897 8356.9277 C-8001.7681 8357.1543 -8002.3711 8356.1631 -8002.4575 8356.2344 c-8002.5791 8356.3359 -8002.1279 8357.0977 -8002.2695 8357.166 C-8002.4497 8357.4297 -8003.0142 8356.5527 -8003.0889 8356.6016 c-8003.1777 8356.6602 -8002.9058 8357.0381 -8002.8799 8357.2334 c-8002.8545 8357.4277 -8002.9966 8357.5615 -8003.2144 8357.5098 c-8003.4736 8357.4473 -8003.8696 8356.6416 -8003.9727 8356.7354 C-8004.0791 8356.791 -8003.8682 8357.0781 -8003.7954 8357.3125 c-8003.7583 8357.4277 -8003.8882 8357.6016 -8004.0298 8357.6016 c-8004.3135 8357.6494 -8004.6255 8356.998 -8004.7065 8357.1025 c-8004.7524 8357.1621 -8004.5898 8357.4902 -8004.7295 8357.5879 c-8004.8994 8357.7061 -8005.3115 8357.2383 -8005.4521 8357.293 C-8005.5361 8357.3418 -8005.4126 8357.5967 -8005.4927 8357.6533 c-8005.7295 8357.8193 -8006.0039 8357.4209 -8006.0513 8357.4688 C-8006.1167 8357.4912 -8006.1201 8357.5361 -8006.2793 8357.6406 c-8006.4736 8357.7676 -8006.5254 8357.8486 -8006.5425 8357.9648 c-8006.5654 8358.083 -8006.3135 8358.375 -8006.1655 8358.3496 c-8005.8223 8358.29 -8005.8662 8358.8496 -8005.6328 8358.7158 c-8005.5679 8358.6797 -8005.6592 8358.2588 -8005.4199 8358.2656 c-8005.0488 8358.2783 -8004.9858 8358.8213 -8004.7817 8358.8105 c-8004.6406 8358.8037 -8004.8521 8358.1836 -8004.6328 8358.2607 c-8004.4751 8358.3164 -8004.0063 8359.3018 -8003.9795 8359.21 c-8003.8975 8358.9424 -8004.0703 8358.3984 -8003.9409 8358.4082 c-8003.7568 8358.4229 -8003.5078 8359.3174 -8003.2544 8359.4375 c-8003.1826 8359.4727 -8003.3774 8358.6006 -8003.1958 8358.5967 C-8003.0898 8358.6465 -8002.7578 8359.4492 -8002.6274 8359.498 C-8002.5591 8359.4824 -8002.5879 8359.125 -8002.5176 8359.1045 c-8002.4688 8359.0898 -8002.2817 8359.5654 -8002.21 8359.5234 c-8002.1055 8359.4629 -8002.2471 8358.9922 -8002.0889 8358.9229 c-8001.9175 8358.8486 -8001.4878 8359.8926 -8001.3486 8359.7979 c-8001.2769 8359.75 -8001.3574 8359.21 -8001.21 8359.2461 c-8001.0718 8359.2783 -8000.9414 8359.6143 -8000.8081 8359.6426 c-8000.7295 8359.6582 -8000.7935 8359.1914 -8000.7495 8359.1738 c-8000.5889 8359.1152 -8000.2329 8359.6719 -8000.0688 8359.5234 c-7999.8584 8359.335 -7999.9395 8358.9697 -7999.8345 8358.9824 c-7999.6274 8359.0059 -7999.4912 8359.2432 -7999.4146 8359.1836 c-7999.2642 8359.0684 -7999.3281 8358.7793 -7999.0527 8358.6924 c-7998.8975 8358.6426 -7998.7935 8358.9346 -7998.7495 8358.9307 c-7998.6738 8358.9277 -7998.6782 8358.8301 -7998.6665 8358.7246 c-7998.6328 8358.4609 -7998.6064 8358.3994 -7998.4878 8358.377 c-7998.0854 8358.3535 -7997.5625 8358.2842 -7997.1807 8358.2754 c-7996.6274 8358.2607 -7995.2607 8358.2373 -7995.1182 8358.2373 c-7995 8358.2129 -7994.7432 8358.3945 -7994.6689 8358.4609 c-7994.4678 8358.6455 -7994.2998 8358.8594 -7993.9858 8359.1201 c-7993.8906 8359.2012 -7993.8081 8359.1807 -7993.7378 8359.1563 c-7993.5249 8359.085 -7993.4585 8359.0332 -7993.2202 8359.002 c-7992.9175 8358.959 -7992.4272 8359.0488 -7992.1245 8359.1426 c-7991.6035 8359.3018 -7991.5264 8359.3242 -7991.0977 8359.2754 c-7990.6992 8359.2295 -7990.0586 8359.1582 -7990.0479 8358.8105 c-7990.0415 8358.5957 -7989.9414 8358.4434 -7989.5742 8358.0117 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7984.9722 8371 m-7984.9722 8344.9727 L-8011 8344.9727 L-8011 8371 L-7984.9722 8371 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7993.6455 8357.9893 m-7984.9736 8357.9893 lS-7997.9839 8371 m-7997.9839 8362.3242 lS0.7084 0.636438 0.515526 0.381872 K1.125 w-7993.7202 8353.6504 m-7984.9727 8353.6504 lS-8002.3232 8370.999 m-8002.3232 8361.6455 lS0.64 0.650477 0.701045 0.510735 K-7993.6504 8370.999 m-7993.6504 8368.5869 l-7990.9937 8368.3633 -7989.3096 8366.6602 v-7987.6064 8364.9336 -7987.3774 8362.3281 y-7984.9727 8362.3281 lS*u1 D0 O0.7084 0.636438 0.515526 0.381872 k1 w-8001.8418 8355.1855 m-8001.8418 8355.25 -8001.8218 8355.291 -8001.7783 8355.291 c-8001.6943 8355.291 -8001.4634 8354.9541 -8001.3994 8354.9541 c-8001.3154 8354.9541 -8001.2729 8354.9961 -8001.2729 8355.1016 c-8001.2729 8355.1855 -8001.5264 8356.0928 y-8001.5264 8356.1338 -8001.5264 8356.1338 -8001.5049 8356.1338 c-8001.4414 8356.1338 -8001.0615 8355.5869 -8000.9351 8355.5869 c-8000.9146 8355.5869 -8000.8936 8355.6074 -8000.8936 8355.6289 c-8001.1675 8356.5352 -8001.1675 8356.7256 v-8001.1675 8356.7891 -8001.1675 8356.8105 -8001.1465 8356.8105 c-8001.1055 8356.8105 -8000.6826 8356.2402 -8000.5562 8356.2402 c-8000.5352 8356.2402 -8000.5137 8356.2607 -8000.5137 8356.2822 c-8000.5137 8356.3457 -8000.7666 8357.084 -8000.7666 8357.252 c-8000.7666 8357.2949 -8000.7666 8357.2949 -8000.7446 8357.2949 c-8000.6826 8357.2949 -8000.4722 8357.084 -8000.4297 8357.084 c-8000.4082 8357.084 -8000.3882 8357.1055 -8000.3882 8357.126 c-8000.3882 8357.1465 -8000.4927 8357.5059 -8000.4927 8357.5898 c-8000.4927 8357.6113 -8000.4927 8357.6113 -8000.4722 8357.6113 c-8000.4297 8357.6113 -8000.0918 8357.252 -8000.0078 8357.252 c-7999.9658 8357.252 -7999.9233 8357.2949 -7999.9233 8357.3789 c-7999.9233 8357.5273 -8000.1138 8358.2441 -8000.1138 8358.2861 c-8000.1138 8358.3701 -8000.0918 8358.4121 -8000.0498 8358.4121 c-7999.9658 8358.4121 -7999.7119 8358.0957 -7999.6494 8358.0957 c-7999.5854 8358.0957 -7999.5439 8358.1162 -7999.5439 8358.1807 c-7999.5854 8358.6016 L-7999.5854 8358.666 -7999.5854 8358.6855 -7999.5654 8358.6855 c-7999.5225 8358.6855 -7999.2915 8358.3916 -7999.2065 8358.3916 c-7999.1006 8358.3916 -7999.1006 8358.877 -7999.1006 8358.9395 c-7999.1006 8359.0449 -7999.0166 8359.1289 -7998.8896 8359.1289 c-7998.8057 8359.1289 -7998.4678 8358.8975 -7998.4473 8358.8975 c-7998.3623 8358.8975 -7998.3198 8359.3398 -7998.2568 8359.3398 c-7998.1943 8359.3398 -7997.9199 8359.2129 -7997.8564 8359.2129 c-7997.6455 8359.2129 -7997.6035 8359.2988 -7997.6035 8359.4668 c-7997.6255 8359.6143 L-7997.6255 8359.6563 -7997.6035 8359.6563 -7997.5835 8359.6563 c-7997.4985 8359.6563 -7997.2241 8359.3818 -7997.1392 8359.3818 c-7996.9287 8359.3818 -7994.8198 8361.4492 -7994.5454 8361.7227 c-7994.3984 8361.8906 -7994.3984 8362.1865 -7994.3984 8362.3135 c-7994.3984 8363.1777 -7994.3984 8363.2617 -7994.2295 8363.3457 c-7993.5977 8363.5996 -7993.5127 8363.7471 -7992.7334 8365.0332 c-7992.6479 8365.1807 -7991.7407 8365.793 -7991.5942 8365.793 c-7991.4878 8365.793 -7991.1094 8365.5391 -7991.0239 8365.5391 c-7990.9194 8365.5391 -7990.8135 8365.6025 -7990.8135 8365.7705 c-7990.8135 8366.2139 -7991.3408 8366.7207 -7991.9312 8366.7207 c-7992.7534 8366.7207 -7993.0913 8366.0234 -7993.1338 8365.625 c-7993.1543 8365.4766 -7993.2393 8365.3916 -7993.3447 8365.3916 c-7993.3862 8365.3916 -7993.4287 8365.4121 -7993.4702 8365.4766 c-7993.9561 8366.2773 -7994.9473 8366.7207 -7995.7065 8366.7207 c-7996.7393 8366.7207 -7997.8774 8366.0879 -7998.3418 8365.8145 c-7998.7842 8365.5615 -7999.4814 8365.3916 -7999.8809 8365.3916 c-8000.3242 8365.3916 -8000.3662 8365.5391 -8000.3662 8365.793 c-8000.3662 8365.9404 -7999.9023 8366.3818 -7999.9023 8366.5098 c-7999.9023 8366.6357 -8000.0498 8366.7207 -8000.4082 8366.7207 c-8000.8936 8366.7207 -8001.5679 8366.0029 -8001.5679 8365.2236 c-8001.5679 8364.6113 -8000.7666 8364.085 -8000.3022 8364.085 c-7999.3755 8364.085 -7999.0942 8364.4434 -7998.5264 8364.9072 c-7998.4414 8364.9697 -7998.3774 8364.9922 -7998.3359 8364.9922 c-7998.1895 8364.9922 -7998.1895 8363.8945 -7998.1895 8363.7695 c-7998.1895 8363.6201 -7998.2729 8363.5576 -7998.3774 8363.5576 c-8000.7822 8363.5576 -8005.6592 8362.334 -8007.3672 8356.1777 c-8007.4297 8355.9658 -8007.5361 8355.8613 -8007.6406 8355.8613 c-8007.7881 8355.8613 -8008.7793 8356.7041 -8008.7793 8358.2861 c-8008.7793 8360.1201 -8007.5767 8361.0898 -8006.9873 8361.0898 c-8006.8398 8361.0898 -8006.6494 8361.0693 -8006.6494 8360.9209 c-8006.6494 8360.8584 -8006.6929 8360.7949 -8006.7759 8360.6895 c-8007.1143 8360.3535 -8007.3672 8359.7197 -8007.3672 8359.4033 c-8007.3672 8359.1914 -8007.2607 8359.0234 -8007.1143 8359.0234 c-8006.9033 8359.0234 -8006.5654 8359.9727 -8006.46 8360.1201 c-8006.3335 8360.3311 -8005.9546 8360.7109 -8005.2378 8361.2383 c-8004.4995 8361.7637 -8003.0654 8363.0723 -8003.0654 8364.3369 c-8003.0654 8365.709 -8004.1191 8366.6152 -8004.9209 8366.6152 c-8005.7007 8366.6152 -8006.6714 8366.0879 -8007.0713 8365.6025 c-8007.7041 8364.8652 -8008.3154 8364.2949 -8008.8218 8364.2949 c-8009.1592 8364.2949 -8009.3066 8364.5059 -8009.3066 8364.7168 c-8009.3066 8365.0537 -8009.0537 8365.2861 -8008.5479 8365.3281 c-8007.9575 8365.3711 -8007.8936 8365.793 -8007.8936 8366.1289 c-8007.8936 8366.4033 -8008.4209 8366.7207 -8008.8433 8366.7207 c-8009.4751 8366.7207 -8010.2974 8366.0234 -8010.2974 8364.1904 c-8010.2974 8362.6924 -8009.0537 8362.2295 -8008.5679 8362.2295 c-8008.1265 8362.2295 -8007.4722 8362.3135 -8007.0928 8362.6504 c-8005.8066 8363.8535 -8005.1318 8364.0625 -8004.5835 8364.0625 c-8004.3721 8364.0625 -8004.2881 8364.0625 -8004.2881 8364.2109 c-8004.2881 8364.5273 -8005.0474 8364.7168 -8005.1318 8364.7383 c-8005.3423 8364.8008 -8005.5103 8365.0332 -8005.5103 8365.2441 c-8005.5103 8365.7295 -8005.2378 8365.75 -8004.8774 8365.75 c-8004.5215 8365.75 -8003.8042 8365.3916 -8003.8042 8364.1904 c-8003.8042 8363.1992 -8004.9424 8362.0391 -8005.4058 8361.8076 c-8005.7007 8361.6377 -8006.5874 8361.6602 -8006.9458 8361.6172 c-8007.6406 8361.5322 -8009.4121 8360.585 -8009.4121 8358.0957 c-8009.4336 8356.6826 -8008.1265 8355.3555 -8007.8511 8355.166 c-8007.6826 8355.0586 -8007.5986 8354.9326 -8007.5986 8354.7637 c-8007.5986 8354.5527 -8007.6626 8351.6221 -8007.9995 8351.6221 c-8008.4424 8351.6221 -8008.5054 8351.6221 -8008.5054 8351.8135 c-8008.21 8352.9082 -8008.21 8353.1406 v-8008.21 8353.457 -8008.4424 8354.9326 -8009.3066 8354.9326 c-8009.5806 8354.9326 -8010.0449 8354.7002 -8010.0449 8354.3848 c-8010.0449 8354.0898 -8009.3486 8352.8877 -8009.3486 8352.6133 c-8009.3486 8352.1279 -8009.3921 8352.1074 -8010.0654 8351.4961 c-8010.2559 8351.3486 -8010.3193 8351.2227 -8010.3193 8351.0313 c-8010.3193 8350.8633 -8010.2134 8350.7354 -8010.0449 8350.7354 c-8009.8975 8350.7354 -8009.3281 8351.0117 -8009.2017 8351.0313 c-8009.0752 8351.0313 -8008.8433 8351.0527 -8008.6538 8351.0527 c-8008.2734 8351.0527 -8008.0845 8350.9258 -8008.0845 8350.7998 c-8008.0845 8350.5674 -8008.0845 8349.8936 -8008.9263 8348.4375 c-8009.1167 8348.1006 -8010.2974 8346.7725 -8010.2974 8346.4346 c-8010.2974 8346.2656 -8010.2134 8346.2461 -8010.1089 8346.2461 c-8009.9185 8346.2461 -8009.4966 8346.667 -8009.3706 8346.8145 c-8008.1265 8348.1426 -8007.3042 8349.5762 -8006.9238 8350.8418 c-8006.8398 8351.1582 -8006.7344 8351.0742 -8006.5654 8351.0957 c-8004.4155 8351.6016 -8002.3271 8354.1104 -8002.3271 8354.1318 c-8002.4326 8354.4053 -8002.4326 8354.4688 v-8002.4326 8354.5957 -8002.3271 8354.6172 -8002.3057 8354.6172 c-8002.2432 8354.6172 -8002.0527 8354.4053 -8002.0103 8354.4053 c-8001.9058 8354.4053 -8001.7783 8354.4902 -8001.7783 8354.6377 C-8001.8418 8355.1855 lf0 D-8005.1104 8353.6895 m-8004.5215 8353.6895 -8004.0986 8353.7949 -8003.6982 8354.0684 c-8003.6553 8354.0898 -8003.6138 8354.1104 -8003.5928 8354.1104 c-8003.5498 8354.1104 -8003.5498 8354.0898 -8003.5498 8354.0469 c-8003.5498 8353.626 -8005.4272 8351.666 -8006.5654 8351.666 c-8006.6289 8351.666 -8006.6714 8351.707 -8006.6714 8351.7695 c-8006.6714 8351.96 -8006.5874 8353.9629 -8006.2495 8353.9629 c-8006.1865 8353.9629 -8006.1016 8353.9414 -8006.0386 8353.9004 c-8005.7007 8353.752 -8005.4902 8353.6895 -8005.1104 8353.6895 cf-8004.5835 8356.4512 m-8004.5835 8356.0293 -8004.5625 8355.5654 -8003.8662 8355.5654 c-8003.2334 8355.5654 -8002.6431 8356.2197 -8002.4961 8356.3672 c-8002.4326 8356.4092 -8002.3906 8356.4297 -8002.3486 8356.4297 c-8002.3271 8356.4297 -8002.2847 8356.3877 -8002.2847 8356.3457 c-8002.2847 8355.9023 -8003.6553 8354.2373 -8005.0049 8354.2373 c-8005.2578 8354.2373 -8006.2705 8354.4053 -8006.2705 8354.9541 c-8006.2705 8355.207 -8005.8906 8356.5781 -8005.2793 8357.6533 c-8003.9087 8360.1416 -7999.7119 8361.7002 -7997.8145 8361.7002 c-7996.9072 8361.7227 -7996.6118 8361.4063 -7996.4863 8361.3848 c-7996.4648 8361.3848 -7996.4438 8361.3643 -7996.4233 8361.3643 c-7996.3174 8361.3643 -7996.1904 8361.4277 -7996.1904 8361.5752 c-7996.1904 8361.5967 -7996.2119 8361.5967 v-7996.3594 8362.7344 -7996.4014 8363.1357 -7996.4014 8364.3994 c-7996.4014 8365.793 -7996.4014 8365.9189 -7995.4321 8365.9189 c-7994.1455 8365.9189 -7993.8506 8364.8438 -7993.8506 8364.6113 c-7993.8506 8364.1904 -7994.4399 8363.8945 -7994.5889 8363.8945 c-7994.7358 8363.8945 -7994.9058 8364.002 -7994.9058 8364.1904 c-7994.9058 8364.4854 -7994.9473 8364.6328 -7995.2207 8364.6328 c-7995.4951 8364.6328 -7995.4951 8364.2744 -7995.4951 8364.168 c-7995.4951 8363.916 -7995.3896 8363.6631 -7995.1782 8363.5361 c-7994.7998 8363.2832 -7994.7998 8362.8828 -7994.7998 8362.6719 c-7994.7998 8362.5664 -7994.7998 8362.4395 -7994.8198 8362.334 c-7994.8418 8362.166 -7996.7817 8360.1201 -7997.0977 8360.1201 c-7997.2446 8360.1201 -7997.5615 8360.2666 -7998.4258 8360.2666 c-8000.5767 8360.2666 -8001.5474 8358.5391 -8001.7378 8358.0117 c-8001.9897 8357.2949 -8002.7915 8356.999 -8003.0225 8356.999 c-8003.2129 8356.999 -8003.2129 8357.042 -8003.2129 8357.4424 c-8003.2129 8357.5273 -8003.4238 8357.8633 y-8003.4238 8358.0537 -8002.3906 8358.3066 -8002.3906 8358.4961 c-8002.3906 8358.666 -8002.5801 8358.6855 -8002.7271 8358.6855 c-8002.8115 8358.6855 -8003.8882 8358.6855 -8004.3306 8357.8633 c-8004.5415 8357.4629 -8004.5835 8356.8945 -8004.5835 8356.4512 cf1 D-8000.4927 8354.1953 m-8000.4927 8354.1514 -8000.5137 8354.1318 -8000.5352 8354.1318 c-8000.5986 8354.1318 -8000.7666 8354.4688 -8000.8506 8354.4688 c-8000.9146 8354.4688 -8000.9995 8354.3848 -8001.0415 8354.2783 c-8001.0615 8354.1953 -8001.1255 8353.7305 -8001.21 8353.7305 c-8001.2524 8353.7305 -8001.4209 8353.9629 -8001.4634 8353.9629 c-8001.6104 8353.9629 -8001.7158 8353.7305 -8001.7158 8353.5215 c-8001.7158 8353.415 -8001.7783 8353.415 -8001.9263 8353.415 c-8002.5166 8353.415 -8004.1406 8351.2432 -8004.5625 8349.4922 c-8004.6055 8349.3242 -8004.5835 8349.1768 -8004.8994 8349.0703 c-8007.0713 8348.334 -8009.5176 8346.1816 -8009.5176 8346.0557 c-8009.5176 8345.9082 -8009.4336 8345.8242 -8009.3066 8345.8242 c-8009.2432 8345.8242 -8009.1592 8345.8242 -8008.6538 8346.1602 c-8007.7681 8346.751 -8005.7217 8348.0381 -8004.8994 8348.0381 c-8004.6265 8348.0381 -8004.6055 8347.6797 -8004.6055 8347.4258 c-8004.6055 8347.2354 -8004.6265 8347.0039 -8004.6265 8346.8574 c-8004.6465 8346.583 -8004.9634 8346.2656 -8004.9634 8346.0977 c-8004.9634 8345.9502 -8004.8154 8345.8447 -8004.6465 8345.8447 c-8004.4575 8345.8447 -8004.3306 8345.8662 -8004.1606 8346.0557 c-8003.8662 8346.3926 -8003.7402 8346.541 -8003.4238 8346.541 c-8003.1914 8346.541 -8002.1377 8345.8242 -8001.8838 8345.8242 c-8001.5679 8345.8242 -8001.1895 8346.3086 -8001.1895 8346.6045 c-8001.1895 8347.3418 -8002.0942 8347.9326 -8002.6431 8347.9326 c-8003.0225 8347.9326 -8003.4438 8347.8066 -8003.6353 8347.5742 c-8003.6982 8347.5098 -8003.7607 8347.4688 -8003.8242 8347.4688 c-8003.9937 8347.4688 -8004.1191 8347.9326 -8004.1191 8347.9746 c-8004.1191 8348.3975 -8001.2729 8348.459 -8000.9146 8348.459 c-8000.7666 8348.459 -8000.6401 8348.375 -8000.5352 8348.2061 c-8000.3447 8347.9121 -7999.1855 8346.6895 -7997.6255 8346.6895 c-7995.79 8346.6895 -7994.0825 8347.9521 -7994.0825 8349.8506 c-7994.0825 8349.957 -7994.1245 8350.5039 -7994.1245 8350.5264 c-7994.1245 8350.5898 -7993.0063 8352.3389 -7991.6782 8352.3389 c-7990.6245 8352.3389 -7990.2656 8351.75 -7990.2656 8351.2637 c-7990.2656 8351.0313 -7990.3711 8350.3789 -7990.8984 8350.3789 c-7991.1094 8350.3789 -7991.2144 8350.5898 -7991.2144 8350.9688 c-7991.2144 8351.0527 -7991.0039 8351.4326 -7991.0039 8351.5381 c-7991.0039 8351.5801 -7991.0239 8351.6016 -7991.0879 8351.6016 c-7991.4258 8351.6016 -7991.9521 8351.2432 -7992.1846 8350.5898 c-7992.4595 8349.873 -7992.8594 8349.1768 -7993.1958 8348.7754 c-7993.5127 8348.418 -7993.6182 8347.8262 -7993.6182 8347.4893 c-7993.6182 8347.0039 -7993.1338 8345.8447 -7991.4878 8345.8447 c-7990.2871 8345.8447 -7989.4434 8346.583 -7989.4434 8347.1943 c-7989.4434 8347.8066 -7989.7598 8348.1855 -7990.2026 8348.1855 c-7990.6455 8348.1855 -7990.9824 8347.8477 -7990.9824 8347.5098 c-7990.9824 8346.8359 -7991.1514 8346.6895 -7991.4878 8346.6895 c-7991.6992 8346.6895 -7991.8896 8346.8145 -7991.8896 8347.1309 c-7991.8896 8347.3633 -7991.8896 8347.7422 -7990.3711 8349.0078 c-7989.8857 8349.4082 -7989.4214 8350.1055 -7989.4214 8350.8848 c-7989.4214 8351.6445 -7990.4561 8352.8447 -7991.6362 8352.8447 c-7992.8594 8352.8447 -7993.6401 8352.0654 -7994.2515 8351.3486 c-7994.5454 8351.0117 -7995.9814 8349.3242 -7996.0439 8349.3018 c-7996.2334 8349.1543 -7996.3174 8349.0293 -7996.3174 8348.9023 c-7996.3174 8348.7969 -7996.2119 8348.6914 -7996.0854 8348.6914 c-7995.8535 8348.6914 -7994.9058 8349.6406 -7994.8198 8349.6406 c-7994.7568 8349.6406 -7994.7153 8349.5762 -7994.7153 8349.4922 c-7994.7153 8348.7334 -7995.8535 8347.2578 -7997.6255 8347.2578 c-7999.1006 8347.2578 -7999.9863 8348.375 -7999.9863 8348.418 c-7999.9863 8348.5439 -7999.8394 8348.6689 -7999.5225 8348.7334 c-7995.6426 8349.4717 -7992.3955 8353.0215 -7992.3955 8357.6377 c-7992.3955 8357.7441 -7992.2256 8357.7705 -7992.0786 8357.7705 c-7991.7202 8357.7705 -7991.0879 8357.8496 -7991.0879 8357.5762 c-7991.0879 8357.4697 -7991.1294 8357.3438 -7991.1934 8357.2168 c-7991.5518 8356.6465 -7991.8682 8356.4727 -7991.8682 8355.5215 c-7991.8682 8355.0586 -7991.4878 8354.5322 -7990.8984 8354.5322 c-7989.8657 8354.5322 -7989.4214 8355.5654 -7989.4214 8355.7969 c-7989.4214 8355.9658 -7989.5073 8356.0293 -7989.5903 8356.0293 c-7989.7178 8356.0293 -7990.2241 8355.502 -7990.3711 8355.502 c-7990.5615 8355.502 -7990.7085 8355.5439 -7990.7085 8356.0293 c-7990.7085 8356.3672 -7989.4214 8360.0781 -7989.4214 8360.8789 c-7989.4214 8361.4492 -7989.7598 8362.1455 -7990.6455 8362.6504 c-7990.6875 8362.6719 -7990.7085 8362.6924 -7990.7085 8362.7344 c-7990.7085 8362.8184 -7990.5615 8362.9248 -7990.4126 8362.9658 c-7989.8018 8363.1357 -7989.4214 8363.2412 -7989.4214 8364.1904 c-7989.4214 8364.5488 -7989.7598 8365.2236 -7990.0127 8365.2236 c-7990.2026 8365.2236 -7990.2026 8365.1807 -7990.2026 8364.8223 c-7990.2026 8364.6748 -7990.2446 8364.5693 -7990.3926 8364.4639 c-7990.7085 8364.2529 -7990.7295 8364.2109 -7990.8135 8363.7266 c-7990.8774 8363.4102 -7991.0039 8363.3242 -7992.1426 8362.6924 c-7992.5854 8362.4189 -7992.6904 8362.1865 -7992.7744 8361.9551 c-7992.8594 8361.7637 -7992.9233 8361.7637 -7993.4287 8361.7637 c-7993.9561 8361.7637 -7996.5073 8359.0449 -7996.5073 8358.918 c-7996.5073 8358.8555 -7996.3809 8358.5596 -7996.3809 8358.4961 c-7996.3809 8358.4336 -7996.4014 8358.3916 -7996.4438 8358.3916 c-7996.4863 8358.3916 -7996.6338 8358.6016 -7996.6758 8358.6016 c-7996.7817 8358.6016 -7996.7817 8358.4121 -7996.7817 8358.2637 c-7996.7817 8358.1602 -7996.5703 8357.5898 -7996.5703 8357.4424 c-7996.5703 8357.3584 -7996.5918 8357.2949 -7996.6338 8357.2949 c-7996.7178 8357.2949 -7996.9072 8357.7578 -7996.9922 8357.7578 c-7997.0342 8357.7578 -7997.0762 8357.7168 -7997.0762 8357.5898 c-7997.0762 8357.4424 -7996.8862 8356.7256 y-7996.8862 8356.6621 -7996.9072 8356.5566 -7996.9502 8356.5566 c-7997.0342 8356.5566 -7997.1826 8356.957 -7997.2666 8356.957 c-7997.3286 8356.957 -7997.3926 8356.873 -7997.3926 8356.7256 c-7997.3926 8356.6406 -7997.2446 8356.2197 -7997.2446 8356.1143 c-7997.2446 8356.0508 -7997.2666 8355.9863 -7997.3086 8355.9863 c-7997.3506 8355.9863 -7997.5835 8356.5996 -7997.7095 8356.5996 c-7997.7935 8356.5996 -7997.8994 8356.4922 -7997.8994 8356.3877 c-7997.8994 8356.3037 -7997.7729 8355.9453 -7997.7729 8355.8613 c-7997.7729 8355.8184 -7997.7729 8355.7969 -7997.7935 8355.7969 c-7997.8774 8355.7969 -7998.0254 8356.2822 -7998.1104 8356.2822 c-7998.3418 8356.2822 -7998.3623 8355.8613 -7998.3623 8355.6709 c-7998.3623 8355.5869 -7998.2998 8355.25 -7998.2998 8355.1855 c-7998.2998 8355.123 -7998.3198 8355.1016 -7998.3418 8355.1016 c-7998.4897 8355.1016 -7998.6782 8355.9023 -7998.8271 8355.9023 c-7999.0386 8355.9023 -7999.0386 8355.7129 -7999.0386 8355.4814 c-7999.0166 8354.9541 L-7999.0166 8354.9326 -7999.0386 8354.9121 y-7999.0586 8354.9121 -7999.1006 8354.9326 -7999.1226 8354.9961 c-7999.1855 8355.207 -7999.3115 8355.6289 -7999.5225 8355.6289 c-7999.6694 8355.6289 -7999.8174 8355.46 -7999.8174 8355.3135 c-7999.8174 8355.0801 -7999.7119 8354.7002 -7999.7119 8354.4688 c-7999.7119 8354.4053 -7999.7334 8354.3848 -7999.7754 8354.3848 c-7999.8608 8354.3848 -7999.9863 8354.8262 -8000.0278 8354.9121 c-8000.0918 8354.9961 -8000.1553 8355.0176 -8000.2192 8355.0176 c-8000.5352 8355.0176 -8000.5352 8354.7002 -8000.5352 8354.5527 C-8000.4927 8354.1953 lf0 D-8001.8633 8349.8301 m-8001.8633 8349.5977 -8003.8042 8349.4082 -8003.8662 8349.4082 c-8003.9722 8349.4082 -8004.0352 8349.4717 -8004.0352 8349.5762 c-8004.0352 8350.4414 -8002.2847 8352.6768 -8001.8633 8352.6768 c-8001.7998 8352.6768 -8001.7783 8352.6563 -8001.7783 8352.5928 c-8002.2002 8351.3486 -8002.2002 8351.0957 v-8002.2002 8350.7158 -8002.0942 8350.4629 -8001.9058 8350.041 c-8001.8838 8349.957 -8001.8633 8349.8936 -8001.8633 8349.8301 cf-7993.1338 8361.2793 m-7992.9858 8361.2793 -7992.4795 8360.7744 -7992.3325 8360.7744 c-7992.2065 8360.7744 -7992.0791 8360.8584 -7992.0791 8361.0059 c-7992.0791 8361.0898 -7992.2695 8361.5322 -7992.2695 8361.6377 c-7992.2695 8361.9961 -7991.8896 8362.293 -7991.5098 8362.293 c-7991.1094 8362.293 -7989.9702 8361.9756 -7989.9702 8360.752 c-7989.9702 8359.6563 -7990.3926 8359.6563 -7992.0366 8359.6563 c-7992.3955 8359.6563 -7994.0615 8359.8457 -7994.3145 8359.8457 c-7994.4399 8359.8457 -7994.4834 8359.6768 -7994.4834 8359.5498 c-7994.4834 8359.5088 -7994.4834 8359.4668 -7994.4614 8359.4453 c-7994.3984 8359.0664 -7994.1675 8358.5176 -7994.1675 8358.1377 c-7994.1675 8353.6895 -7998.2998 8349.8301 -8000.7666 8349.8301 c-8001.4209 8349.8301 -8001.6519 8350.6318 -8001.6519 8351.0527 c-8001.6519 8352.7822 -7999.6694 8353.8145 -7999.4175 8353.8145 c-7999.3545 8353.8145 -7999.3335 8353.7949 -7999.3335 8353.752 c-7999.3335 8353.71 -7999.3545 8353.668 -7999.3975 8353.626 c-7999.5225 8353.457 -8000.0498 8352.8447 -8000.0498 8352.2129 c-8000.0498 8351.875 -7999.7554 8351.4326 -7998.9951 8351.4326 c-7997.7305 8351.4326 -7997.1826 8352.7822 -7997.1826 8353.1406 c-7997.1826 8353.2891 -7997.2446 8353.499 -7997.4561 8353.499 c-7997.6035 8353.499 -7998.0049 8352.8447 -7998.1519 8352.8447 c-7998.2158 8352.8447 -7998.4473 8352.9717 -7998.5103 8352.9717 c-7998.5942 8352.9717 -7998.6582 8352.9512 -7998.7422 8352.9512 c-7998.8057 8352.9512 -7998.8481 8353.0137 -7998.8481 8353.1191 c-7998.8481 8353.4785 -7998.3623 8354.0469 -7997.8774 8354.3008 c-7996.9722 8354.7637 -7995.6226 8356.0928 -7995.6226 8357.5479 c-7995.6226 8357.9688 -7995.6846 8358.3701 -7995.6846 8358.707 c-7995.6846 8359.2559 -7994.7568 8360.1201 -7993.8081 8361.0059 c-7993.6401 8361.1533 -7993.3862 8361.2793 -7993.1338 8361.2793 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7984.9722 8371 m-7984.9722 8344.9727 L-8011 8344.9727 L-8011 8371 L-7984.9722 8371 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7993.6455 8357.9893 m-7984.9736 8357.9893 lS-7997.9839 8371 m-7997.9839 8362.3242 lS0.64 0.650477 0.701045 0.510735 K1.125 w-7993.7202 8353.6504 m-7984.9727 8353.6504 lS-8002.3232 8371 m-8002.3232 8361.6455 lS0.7084 0.636438 0.515526 0.381872 K-7993.6504 8371 m-7993.6504 8368.5869 l-7990.9937 8368.3633 -7989.3096 8366.6602 v-7987.6064 8364.9336 -7987.3774 8362.3281 y-7984.9727 8362.3281 lS*u0 O0.7084 0.636438 0.515526 0.381872 k1 w-8001.7783 8354.6377 m-8001.7783 8354.4902 -8001.9058 8354.4053 -8002.0103 8354.4053 c-8002.0527 8354.4053 -8002.2432 8354.6172 -8002.3057 8354.6172 c-8002.3271 8354.6172 -8002.4326 8354.5957 -8002.4326 8354.4688 c-8002.4326 8354.4053 -8002.3271 8354.1318 y-8002.3271 8354.1104 -8004.4155 8351.6016 -8006.5654 8351.0957 c-8006.7344 8351.0742 -8006.8398 8351.1582 -8006.9238 8350.8418 c-8007.3042 8349.5762 -8008.1265 8348.1426 -8009.3706 8346.8145 c-8009.4966 8346.668 -8009.9185 8346.2461 -8010.1089 8346.2461 c-8010.2134 8346.2461 -8010.2974 8346.2656 -8010.2974 8346.4346 c-8010.2974 8346.7725 -8009.1167 8348.1006 -8008.9263 8348.4375 c-8008.0845 8349.8936 -8008.0845 8350.5674 -8008.0845 8350.7998 c-8008.0845 8350.9258 -8008.2734 8351.0527 -8008.6538 8351.0527 c-8008.8433 8351.0527 -8009.0752 8351.0313 -8009.2017 8351.0313 c-8009.3281 8351.0117 -8009.8975 8350.7354 -8010.0449 8350.7354 c-8010.2134 8350.7354 -8010.3193 8350.8633 -8010.3193 8351.0313 c-8010.3193 8351.2227 -8010.2559 8351.3486 -8010.0654 8351.4961 c-8009.3921 8352.1074 -8009.3486 8352.1279 -8009.3486 8352.6133 c-8009.3486 8352.8877 -8010.0449 8354.0898 -8010.0449 8354.3848 c-8010.0449 8354.7002 -8009.5806 8354.9326 -8009.3066 8354.9326 c-8008.4424 8354.9326 -8008.21 8353.457 -8008.21 8353.1406 c-8008.21 8352.9082 -8008.5054 8351.8135 y-8008.5054 8351.6221 -8008.4424 8351.6221 -8007.9995 8351.6221 c-8007.6626 8351.6221 -8007.5986 8354.5527 -8007.5986 8354.7637 c-8007.5986 8354.9326 -8007.6826 8355.0586 -8007.8511 8355.166 c-8008.1265 8355.3555 -8009.4336 8356.6826 -8009.4121 8358.0957 c-8009.4121 8360.585 -8007.6406 8361.5322 -8006.9458 8361.6172 c-8006.5874 8361.6602 -8005.7007 8361.6377 -8005.4058 8361.8076 c-8004.9424 8362.0391 -8003.8042 8363.1992 -8003.8042 8364.1904 c-8003.8042 8365.3916 -8004.5215 8365.75 -8004.8774 8365.75 c-8005.2378 8365.75 -8005.5103 8365.7295 -8005.5103 8365.2441 c-8005.5103 8365.0332 -8005.3423 8364.8008 -8005.1318 8364.7383 c-8005.0474 8364.7168 -8004.2881 8364.5273 -8004.2881 8364.2109 c-8004.2881 8364.0625 -8004.3721 8364.0625 -8004.5835 8364.0625 c-8005.1318 8364.0625 -8005.8066 8363.8535 -8007.0928 8362.6504 c-8007.4722 8362.3135 -8008.1265 8362.2295 -8008.5679 8362.2295 c-8009.0537 8362.2295 -8010.2974 8362.6924 -8010.2974 8364.1904 c-8010.2974 8366.0234 -8009.4751 8366.7207 -8008.8433 8366.7207 c-8008.4209 8366.7207 -8007.8936 8366.4033 -8007.8936 8366.1289 c-8007.8936 8365.793 -8007.9575 8365.3711 -8008.5479 8365.3281 c-8009.0537 8365.2861 -8009.3066 8365.0537 -8009.3066 8364.7168 c-8009.3066 8364.5059 -8009.1592 8364.2949 -8008.8218 8364.2949 c-8008.3154 8364.2949 -8007.7041 8364.8652 -8007.0713 8365.6025 c-8006.6714 8366.0879 -8005.7007 8366.6152 -8004.9209 8366.6152 c-8004.1191 8366.6152 -8003.0654 8365.709 -8003.0654 8364.3369 c-8003.0654 8363.0723 -8004.4995 8361.7637 -8005.2378 8361.2383 c-8005.9546 8360.7109 -8006.3335 8360.3311 -8006.46 8360.1201 c-8006.5654 8359.9727 -8006.9033 8359.0234 -8007.1143 8359.0234 c-8007.2607 8359.0234 -8007.3672 8359.1914 -8007.3672 8359.4033 c-8007.3672 8359.7197 -8007.1143 8360.3535 -8006.7759 8360.6895 c-8006.6929 8360.7949 -8006.6494 8360.8584 -8006.6494 8360.9209 c-8006.6494 8361.0693 -8006.8398 8361.0898 -8006.9873 8361.0898 c-8007.5767 8361.0898 -8008.7793 8360.1201 -8008.7793 8358.2861 c-8008.7793 8356.7041 -8007.7881 8355.8613 -8007.6406 8355.8613 c-8007.5361 8355.8613 -8007.4297 8355.9658 -8007.3672 8356.1777 c-8005.6592 8362.334 -8000.7822 8363.5576 -7998.3774 8363.5576 c-7998.2729 8363.5576 -7998.1895 8363.6201 -7998.1895 8363.7695 c-7998.1895 8363.8945 -7998.1895 8364.9922 -7998.3359 8364.9922 c-7998.3774 8364.9922 -7998.4414 8364.9697 -7998.5264 8364.9072 c-7999.0942 8364.4434 -7999.3755 8364.085 -8000.3022 8364.085 c-8000.7666 8364.085 -8001.5679 8364.6113 -8001.5679 8365.2236 c-8001.5679 8366.0029 -8000.8936 8366.7207 -8000.4082 8366.7207 c-8000.0498 8366.7207 -7999.9023 8366.6357 -7999.9023 8366.5098 c-7999.9023 8366.3818 -8000.3662 8365.9404 -8000.3662 8365.793 c-8000.3662 8365.5391 -8000.3242 8365.3916 -7999.8809 8365.3916 c-7999.4814 8365.3916 -7998.7842 8365.5615 -7998.3418 8365.8145 c-7997.8774 8366.0879 -7996.7393 8366.7207 -7995.7065 8366.7207 c-7994.9473 8366.7207 -7993.9561 8366.2773 -7993.4702 8365.4766 c-7993.4287 8365.4121 -7993.3862 8365.3916 -7993.3447 8365.3916 c-7993.2393 8365.3916 -7993.1543 8365.4766 -7993.1338 8365.625 c-7993.0913 8366.0234 -7992.7534 8366.7207 -7991.9312 8366.7207 c-7991.3408 8366.7207 -7990.8135 8366.2139 -7990.8135 8365.7705 c-7990.8135 8365.6025 -7990.9194 8365.5391 -7991.0239 8365.5391 c-7991.1094 8365.5391 -7991.4878 8365.793 -7991.5942 8365.793 c-7991.7407 8365.793 -7992.6479 8365.1807 -7992.7334 8365.0332 c-7993.5127 8363.7471 -7993.5977 8363.5996 -7994.2295 8363.3457 c-7994.3984 8363.2617 -7994.3984 8363.1777 -7994.3984 8362.3135 c-7994.3984 8362.1865 -7994.3984 8361.8906 -7994.5454 8361.7227 c-7994.8198 8361.4492 -7996.9287 8359.3818 -7997.1392 8359.3818 c-7997.2241 8359.3818 -7997.4985 8359.6563 -7997.5835 8359.6563 c-7997.6035 8359.6563 -7997.6255 8359.6563 -7997.6255 8359.6143 C-7997.6035 8359.4668 l-7997.6035 8359.2988 -7997.6455 8359.2129 -7997.8564 8359.2129 c-7997.9199 8359.2129 -7998.1943 8359.3398 -7998.2568 8359.3398 c-7998.3198 8359.3398 -7998.3623 8358.8975 -7998.4473 8358.8975 c-7998.4678 8358.8975 -7998.8057 8359.1289 -7998.8896 8359.1289 c-7999.0166 8359.1289 -7999.1006 8359.0449 -7999.1006 8358.9395 c-7999.1006 8358.877 -7999.1006 8358.3916 -7999.2065 8358.3916 c-7999.2915 8358.3916 -7999.5225 8358.6855 -7999.5654 8358.6855 c-7999.5854 8358.6855 -7999.5854 8358.666 -7999.5854 8358.6016 C-7999.5439 8358.1807 l-7999.5439 8358.1162 -7999.5854 8358.0957 -7999.6494 8358.0957 c-7999.7119 8358.0957 -7999.9658 8358.4121 -8000.0498 8358.4121 c-8000.0918 8358.4121 -8000.1138 8358.3701 -8000.1138 8358.2861 c-8000.1138 8358.2441 -7999.9233 8357.5273 -7999.9233 8357.3789 c-7999.9233 8357.2949 -7999.9658 8357.252 -8000.0078 8357.252 c-8000.0918 8357.252 -8000.4297 8357.6113 -8000.4722 8357.6113 c-8000.4927 8357.6113 -8000.4927 8357.6113 -8000.4927 8357.5898 c-8000.4927 8357.5059 -8000.3882 8357.1465 -8000.3882 8357.127 c-8000.3882 8357.1055 -8000.4082 8357.084 -8000.4297 8357.084 c-8000.4722 8357.084 -8000.6826 8357.2949 -8000.7446 8357.2949 c-8000.7666 8357.2949 -8000.7666 8357.2949 -8000.7666 8357.252 c-8000.7666 8357.084 -8000.5137 8356.3457 -8000.5137 8356.2822 c-8000.5137 8356.2607 -8000.5352 8356.2402 -8000.5562 8356.2402 c-8000.6826 8356.2402 -8001.1055 8356.8105 -8001.1465 8356.8105 c-8001.1675 8356.8105 -8001.1675 8356.7891 -8001.1675 8356.7256 c-8001.1675 8356.5352 -8000.8936 8355.6289 y-8000.8936 8355.6074 -8000.9146 8355.5869 -8000.9351 8355.5869 c-8001.0615 8355.5869 -8001.4414 8356.1338 -8001.5049 8356.1338 c-8001.5264 8356.1338 -8001.5264 8356.1338 -8001.5264 8356.0928 c-8001.2729 8355.1855 -8001.2729 8355.1016 v-8001.2729 8354.9961 -8001.3154 8354.9541 -8001.3994 8354.9541 c-8001.4634 8354.9541 -8001.6943 8355.291 -8001.7783 8355.291 c-8001.8218 8355.291 -8001.8418 8355.25 -8001.8418 8355.1855 c-8001.7783 8354.6377 Lf1 D-8006.0386 8353.9004 m-8006.1016 8353.9414 -8006.1865 8353.9629 -8006.2495 8353.9629 c-8006.5874 8353.9629 -8006.6714 8351.96 -8006.6714 8351.7695 c-8006.6714 8351.707 -8006.6289 8351.666 -8006.5654 8351.666 c-8005.4272 8351.666 -8003.5498 8353.627 -8003.5498 8354.0469 c-8003.5498 8354.0898 -8003.5498 8354.1104 -8003.5928 8354.1104 c-8003.6138 8354.1104 -8003.6553 8354.0898 -8003.6982 8354.0684 c-8004.0986 8353.7949 -8004.5215 8353.6895 -8005.1104 8353.6895 c-8005.4902 8353.6895 -8005.7007 8353.752 -8006.0386 8353.9004 cf-8004.3306 8357.8633 m-8003.8882 8358.6855 -8002.8115 8358.6855 -8002.7271 8358.6855 c-8002.5801 8358.6855 -8002.3906 8358.666 -8002.3906 8358.4961 c-8002.3906 8358.3066 -8003.4238 8358.0537 -8003.4238 8357.8633 c-8003.2129 8357.5273 -8003.2129 8357.4424 v-8003.2129 8357.043 -8003.2129 8357 -8003.0225 8357 c-8002.7915 8357 -8001.9897 8357.2949 -8001.7378 8358.0117 c-8001.5474 8358.5391 -8000.5767 8360.2666 -7998.4258 8360.2666 c-7997.5615 8360.2666 -7997.2446 8360.1201 -7997.0977 8360.1201 c-7996.7817 8360.1201 -7994.8418 8362.166 -7994.8198 8362.334 c-7994.7998 8362.4395 -7994.7998 8362.5664 -7994.7998 8362.6719 c-7994.7998 8362.8828 -7994.7998 8363.2832 -7995.1782 8363.5361 c-7995.3896 8363.6631 -7995.4951 8363.916 -7995.4951 8364.168 c-7995.4951 8364.2744 -7995.4951 8364.6328 -7995.2207 8364.6328 c-7994.9473 8364.6328 -7994.9058 8364.4854 -7994.9058 8364.1904 c-7994.9058 8364.002 -7994.7358 8363.8945 -7994.5889 8363.8945 c-7994.4399 8363.8945 -7993.8506 8364.1904 -7993.8506 8364.6113 c-7993.8506 8364.8438 -7994.1455 8365.9189 -7995.4321 8365.9189 c-7996.4014 8365.9189 -7996.4014 8365.793 -7996.4014 8364.3994 c-7996.4014 8363.1357 -7996.3594 8362.7344 -7996.2119 8361.5967 c-7996.1904 8361.5967 -7996.1904 8361.5752 y-7996.1904 8361.4277 -7996.3174 8361.3643 -7996.4233 8361.3643 c-7996.4438 8361.3643 -7996.4648 8361.3848 -7996.4863 8361.3848 c-7996.6118 8361.4063 -7996.9072 8361.7227 -7997.8145 8361.7002 c-7999.7119 8361.7002 -8003.9087 8360.1416 -8005.2793 8357.6533 c-8005.8906 8356.5781 -8006.2705 8355.207 -8006.2705 8354.9541 c-8006.2705 8354.4053 -8005.2578 8354.2373 -8005.0049 8354.2373 c-8003.6553 8354.2373 -8002.2847 8355.9023 -8002.2847 8356.3457 c-8002.2847 8356.3877 -8002.3271 8356.4297 -8002.3486 8356.4297 c-8002.3906 8356.4297 -8002.4326 8356.4092 -8002.4961 8356.3672 c-8002.6431 8356.2197 -8003.2334 8355.5654 -8003.8662 8355.5654 c-8004.5625 8355.5654 -8004.5835 8356.0293 -8004.5835 8356.4512 c-8004.5835 8356.8945 -8004.5415 8357.4629 -8004.3306 8357.8633 cf0 D-8000.5352 8354.5527 m-8000.5352 8354.7002 -8000.5352 8355.0176 -8000.2192 8355.0176 c-8000.1553 8355.0176 -8000.0918 8354.9961 -8000.0278 8354.9121 c-7999.9863 8354.8262 -7999.8608 8354.3848 -7999.7754 8354.3848 c-7999.7334 8354.3848 -7999.7119 8354.4053 -7999.7119 8354.4688 c-7999.7119 8354.7002 -7999.8174 8355.0801 -7999.8174 8355.3135 c-7999.8174 8355.46 -7999.6694 8355.6289 -7999.5225 8355.6289 c-7999.3115 8355.6289 -7999.1855 8355.207 -7999.1226 8354.9961 c-7999.1006 8354.9326 -7999.0586 8354.9121 -7999.0386 8354.9121 c-7999.0166 8354.9326 -7999.0166 8354.9541 V-7999.0386 8355.4814 l-7999.0386 8355.7129 -7999.0386 8355.9023 -7998.8271 8355.9023 c-7998.6782 8355.9023 -7998.4897 8355.1016 -7998.3418 8355.1016 c-7998.3198 8355.1016 -7998.2998 8355.123 -7998.2998 8355.1855 c-7998.2998 8355.25 -7998.3623 8355.5869 -7998.3623 8355.6709 c-7998.3623 8355.8613 -7998.3418 8356.2822 -7998.1104 8356.2822 c-7998.0254 8356.2822 -7997.8774 8355.7969 -7997.7935 8355.7969 c-7997.7729 8355.7969 -7997.7729 8355.8184 -7997.7729 8355.8613 c-7997.7729 8355.9453 -7997.8994 8356.3037 -7997.8994 8356.3877 c-7997.8994 8356.4922 -7997.7935 8356.5996 -7997.7095 8356.5996 c-7997.5835 8356.5996 -7997.3506 8355.9863 -7997.3086 8355.9863 c-7997.2666 8355.9863 -7997.2446 8356.0508 -7997.2446 8356.1143 c-7997.2446 8356.2197 -7997.3926 8356.6406 -7997.3926 8356.7256 c-7997.3926 8356.873 -7997.3286 8356.957 -7997.2666 8356.957 c-7997.1826 8356.957 -7997.0342 8356.5566 -7996.9502 8356.5566 c-7996.9072 8356.5566 -7996.8862 8356.6621 -7996.8862 8356.7256 c-7997.0762 8357.4424 -7997.0762 8357.5898 v-7997.0762 8357.7168 -7997.0342 8357.7578 -7996.9922 8357.7578 c-7996.9072 8357.7578 -7996.7178 8357.2949 -7996.6338 8357.2949 c-7996.5918 8357.2949 -7996.5703 8357.3584 -7996.5703 8357.4424 c-7996.5703 8357.5898 -7996.7817 8358.1602 -7996.7817 8358.2637 c-7996.7817 8358.4121 -7996.7817 8358.6016 -7996.6758 8358.6016 c-7996.6338 8358.6016 -7996.4863 8358.3916 -7996.4438 8358.3916 c-7996.4014 8358.3916 -7996.3809 8358.4336 -7996.3809 8358.4961 c-7996.3809 8358.5596 -7996.5073 8358.8555 -7996.5073 8358.918 c-7996.5073 8359.0449 -7993.9561 8361.7637 -7993.4287 8361.7637 c-7992.9233 8361.7637 -7992.8594 8361.7637 -7992.7744 8361.9551 c-7992.6904 8362.1865 -7992.5854 8362.4189 -7992.1426 8362.6924 c-7991.0039 8363.3242 -7990.8774 8363.4102 -7990.8135 8363.7266 c-7990.7295 8364.2109 -7990.7085 8364.2529 -7990.3926 8364.4639 c-7990.2446 8364.5693 -7990.2026 8364.6748 -7990.2026 8364.8223 c-7990.2026 8365.1807 -7990.2026 8365.2236 -7990.0127 8365.2236 c-7989.7598 8365.2236 -7989.4214 8364.5488 -7989.4214 8364.1904 c-7989.4214 8363.2412 -7989.8018 8363.1357 -7990.4126 8362.9658 c-7990.5615 8362.9248 -7990.7085 8362.8184 -7990.7085 8362.7344 c-7990.7085 8362.6924 -7990.6875 8362.6719 -7990.6455 8362.6504 c-7989.7598 8362.1455 -7989.4214 8361.4492 -7989.4214 8360.8789 c-7989.4214 8360.0781 -7990.7085 8356.3672 -7990.7085 8356.0293 c-7990.7085 8355.5439 -7990.5615 8355.502 -7990.3711 8355.502 c-7990.2241 8355.502 -7989.7178 8356.0293 -7989.5903 8356.0293 c-7989.5073 8356.0293 -7989.4214 8355.9658 -7989.4214 8355.7969 c-7989.4214 8355.5654 -7989.8657 8354.5322 -7990.8984 8354.5322 c-7991.4878 8354.5322 -7991.8682 8355.0586 -7991.8682 8355.5215 c-7991.8682 8356.4727 -7991.5518 8356.6465 -7991.1934 8357.2168 c-7991.1294 8357.3438 -7991.0879 8357.4697 -7991.0879 8357.5762 c-7991.0879 8357.8496 -7991.7202 8357.7705 -7992.0786 8357.7705 c-7992.2256 8357.7705 -7992.3955 8357.7441 -7992.3955 8357.6377 c-7992.3955 8353.0215 -7995.6426 8349.4717 -7999.5225 8348.7334 c-7999.8394 8348.6689 -7999.9863 8348.5439 -7999.9863 8348.418 c-7999.9863 8348.375 -7999.1006 8347.2578 -7997.6255 8347.2578 c-7995.8535 8347.2578 -7994.7153 8348.7334 -7994.7153 8349.4922 c-7994.7153 8349.5762 -7994.7568 8349.6406 -7994.8198 8349.6406 c-7994.9058 8349.6406 -7995.8535 8348.6914 -7996.0854 8348.6914 c-7996.2119 8348.6914 -7996.3174 8348.7969 -7996.3174 8348.9023 c-7996.3174 8349.0293 -7996.2334 8349.1543 -7996.0439 8349.3018 c-7995.9814 8349.3242 -7994.5454 8351.0117 -7994.2515 8351.3486 c-7993.6401 8352.0654 -7992.8594 8352.8447 -7991.6362 8352.8447 c-7990.4561 8352.8447 -7989.4214 8351.6445 -7989.4214 8350.8848 c-7989.4214 8350.1055 -7989.8857 8349.4082 -7990.3711 8349.0078 c-7991.8896 8347.7422 -7991.8896 8347.3633 -7991.8896 8347.1309 c-7991.8896 8346.8145 -7991.6992 8346.6895 -7991.4878 8346.6895 c-7991.1514 8346.6895 -7990.9824 8346.8359 -7990.9824 8347.5098 c-7990.9824 8347.8477 -7990.6455 8348.1855 -7990.2026 8348.1855 c-7989.7598 8348.1855 -7989.4434 8347.8066 -7989.4434 8347.1943 c-7989.4434 8346.584 -7990.2871 8345.8447 -7991.4878 8345.8447 c-7993.1338 8345.8447 -7993.6182 8347.0039 -7993.6182 8347.4893 c-7993.6182 8347.8262 -7993.5127 8348.418 -7993.1958 8348.7754 c-7992.8594 8349.1768 -7992.4595 8349.873 -7992.1846 8350.5898 c-7991.9521 8351.2432 -7991.4258 8351.6016 -7991.0879 8351.6016 c-7991.0239 8351.6016 -7991.0039 8351.5801 -7991.0039 8351.5381 c-7991.0039 8351.4326 -7991.2144 8351.0527 -7991.2144 8350.9688 c-7991.2144 8350.5898 -7991.1094 8350.3789 -7990.8984 8350.3789 c-7990.3711 8350.3789 -7990.2656 8351.0313 -7990.2656 8351.2637 c-7990.2656 8351.75 -7990.6245 8352.3389 -7991.6782 8352.3389 c-7993.0063 8352.3389 -7994.1245 8350.5898 -7994.1245 8350.5264 c-7994.1245 8350.5039 -7994.0825 8349.957 -7994.0825 8349.8506 c-7994.0825 8347.9521 -7995.79 8346.6895 -7997.6255 8346.6895 c-7999.1855 8346.6895 -8000.3447 8347.9121 -8000.5352 8348.2061 c-8000.6401 8348.375 -8000.7666 8348.459 -8000.9146 8348.459 c-8001.2729 8348.459 -8004.1191 8348.3975 -8004.1191 8347.9746 c-8004.1191 8347.9326 -8003.9937 8347.4688 -8003.8242 8347.4688 c-8003.7607 8347.4688 -8003.6982 8347.5098 -8003.6353 8347.5742 c-8003.4438 8347.8066 -8003.0225 8347.9326 -8002.6431 8347.9326 c-8002.0942 8347.9326 -8001.1895 8347.3418 -8001.1895 8346.6045 c-8001.1895 8346.3086 -8001.5679 8345.8242 -8001.8838 8345.8242 c-8002.1377 8345.8242 -8003.1914 8346.541 -8003.4238 8346.541 c-8003.7402 8346.541 -8003.8662 8346.3926 -8004.1606 8346.0557 c-8004.3306 8345.8662 -8004.4575 8345.8447 -8004.6465 8345.8447 c-8004.8154 8345.8447 -8004.9634 8345.9502 -8004.9634 8346.0977 c-8004.9634 8346.2656 -8004.6465 8346.584 -8004.6265 8346.8574 c-8004.6265 8347.0039 -8004.6055 8347.2354 -8004.6055 8347.4258 c-8004.6055 8347.6797 -8004.6265 8348.0381 -8004.8994 8348.0381 c-8005.7217 8348.0381 -8007.7681 8346.752 -8008.6538 8346.1602 c-8009.1592 8345.8242 -8009.2432 8345.8242 -8009.3066 8345.8242 c-8009.4336 8345.8242 -8009.5176 8345.9082 -8009.5176 8346.0557 c-8009.5176 8346.1816 -8007.0713 8348.334 -8004.8994 8349.0703 c-8004.5835 8349.1768 -8004.6055 8349.3242 -8004.5625 8349.4922 c-8004.1406 8351.2432 -8002.5166 8353.416 -8001.9263 8353.416 c-8001.7783 8353.416 -8001.7158 8353.416 -8001.7158 8353.5215 c-8001.7158 8353.7305 -8001.6104 8353.9629 -8001.4634 8353.9629 c-8001.4209 8353.9629 -8001.2524 8353.7305 -8001.21 8353.7305 c-8001.1255 8353.7305 -8001.0615 8354.1953 -8001.0415 8354.2783 c-8000.9995 8354.3848 -8000.9146 8354.4688 -8000.8506 8354.4688 c-8000.7666 8354.4688 -8000.5986 8354.1318 -8000.5352 8354.1318 c-8000.5137 8354.1318 -8000.4927 8354.1514 -8000.4927 8354.1953 c-8000.5352 8354.5527 Lf1 D-8001.9058 8350.041 m-8002.0942 8350.4629 -8002.2002 8350.7158 -8002.2002 8351.0957 c-8002.2002 8351.3486 -8001.7783 8352.5928 y-8001.7783 8352.6563 -8001.7998 8352.6768 -8001.8633 8352.6768 c-8002.2847 8352.6768 -8004.0352 8350.4414 -8004.0352 8349.5762 c-8004.0352 8349.4717 -8003.9722 8349.4082 -8003.8662 8349.4082 c-8003.8042 8349.4082 -8001.8633 8349.5977 -8001.8633 8349.8301 c-8001.8633 8349.8936 -8001.8838 8349.957 -8001.9058 8350.041 cf-7993.8081 8361.0059 m-7994.7568 8360.1201 -7995.6846 8359.2559 -7995.6846 8358.707 c-7995.6846 8358.3701 -7995.6226 8357.9688 -7995.6226 8357.5479 c-7995.6226 8356.0928 -7996.9722 8354.7637 -7997.8774 8354.3008 c-7998.3623 8354.0469 -7998.8481 8353.4785 -7998.8481 8353.1191 c-7998.8481 8353.0137 -7998.8057 8352.9512 -7998.7422 8352.9512 c-7998.6582 8352.9512 -7998.5942 8352.9717 -7998.5103 8352.9717 c-7998.4473 8352.9717 -7998.2158 8352.8447 -7998.1519 8352.8447 c-7998.0049 8352.8447 -7997.6035 8353.5 -7997.4561 8353.5 c-7997.2446 8353.5 -7997.1826 8353.2891 -7997.1826 8353.1406 c-7997.1826 8352.7822 -7997.7305 8351.4326 -7998.9951 8351.4326 c-7999.7554 8351.4326 -8000.0498 8351.875 -8000.0498 8352.2129 c-8000.0498 8352.8447 -7999.5225 8353.457 -7999.3975 8353.627 c-7999.3545 8353.668 -7999.3335 8353.71 -7999.3335 8353.752 c-7999.3335 8353.7949 -7999.3545 8353.8145 -7999.4175 8353.8145 c-7999.6694 8353.8145 -8001.6519 8352.7822 -8001.6519 8351.0527 c-8001.6519 8350.6318 -8001.4209 8349.8301 -8000.7666 8349.8301 c-7998.2998 8349.8301 -7994.1675 8353.6895 -7994.1675 8358.1377 c-7994.1675 8358.5176 -7994.3984 8359.0664 -7994.4614 8359.4453 c-7994.4834 8359.4668 -7994.4834 8359.5088 -7994.4834 8359.5498 c-7994.4834 8359.6768 -7994.4399 8359.8457 -7994.3145 8359.8457 c-7994.0615 8359.8457 -7992.3955 8359.6563 -7992.0366 8359.6563 c-7990.3926 8359.6563 -7989.9702 8359.6563 -7989.9702 8360.752 c-7989.9702 8361.9756 -7991.1094 8362.293 -7991.5098 8362.293 c-7991.8896 8362.293 -7992.2695 8361.9961 -7992.2695 8361.6377 c-7992.2695 8361.5322 -7992.0791 8361.0898 -7992.0791 8361.0059 c-7992.0791 8360.8584 -7992.2065 8360.7744 -7992.3325 8360.7744 c-7992.4795 8360.7744 -7992.9858 8361.2793 -7993.1338 8361.2793 c-7993.3862 8361.2793 -7993.6401 8361.1533 -7993.8081 8361.0059 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 7)0 Au1 Ap0 D0 J 0 j 1 w 4 M []0 d0 XR-7993 8371 m-8011 8371 L-8011 8353 L-7993 8353 L-7993 8371 Lnu0 Ap0 O0 0 0 1 k-7993 8362 m-8000.8379 8357.4746 L-8000.8379 8360.5625 L-8011 8360.5625 L-8011 8363.4375 L-8000.8379 8363.4375 L-8000.8379 8366.5264 L-7993 8362 Lf0.15 1 0.9 0.1 k-7997.2939 8360.3857 m-8000.0879 8358.7744 L-8000.0879 8361.3008 L-8011 8361.3008 L-8011 8362.7002 L-8000.0879 8362.7002 L-8000.0879 8365.2266 L-7997.2939 8363.6133 L-7994.5 8362 L-7997.2939 8360.3857 Lf0 1 1 0 k-7999.1675 8361.0918 m-7999.5586 8361.0918 -7999.8896 8361.3408 -8000.0176 8361.6865 C-8011 8361.6865 L-8011 8362.3125 L-8000.0176 8362.3125 L-7999.8896 8362.6602 -7999.5586 8362.9082 -7999.1675 8362.9082 c-7998.6655 8362.9082 -7998.2588 8362.502 -7998.2588 8362 c-7998.2588 8361.499 -7998.6655 8361.0918 -7999.1675 8361.0918 cfUU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe Calligraphic Brush Tool/ Touch Calligraph) -(ic Brush/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe ArtOnPat) -(h Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/ Flor) -(al Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush/ Ado) -(be PatternOnPath Brush Tool/ Gothic/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Touch Calligraphic Brush)(1 12 12 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Spoke)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Gothic)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Red Arrow Brush)(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)Pc0 1 1 0 k(CMYK Red)Pc0 0 1 0 k(CMYK Yellow)Pc1 0 1 0 k(CMYK Green)Pc1 0 0 0 k(CMYK Cyan)Pc1 1 0 0 k(CMYK Blue)Pc0 1 0 0 k(CMYK Magenta)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0.9 0.85 0 k(C=0 M=90 Y=85 K=0)Pc0 0.8 0.95 0 k(C=0 M=80 Y=95 K=0)Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0)Pc0 0.35 0.85 0 k(C=0 M=35 Y=85 K=0)Pc0.05 0 0.9 0 k(C=5 M=0 Y=90 K=0)Pc0.2 0 1 0 k(C=20 M=0 Y=100 K=0)Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0)Pc0.75 0 1 0 k(C=75 M=0 Y=100 K=0)Pc0.85 0.1 1 0.1 k(C=85 M=10 Y=100 K=10)Pc0.9 0.3 0.95 0.3 k(C=90 M=30 Y=95 K=30)Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0)Pc0.8 0.1 0.45 0 k(C=80 M=10 Y=45 K=0)Pc0.7 0.15 0 0 k(C=70 M=15 Y=0 K=0)Pc0.85 0.5 0 0 k(C=85 M=50 Y=0 K=0)Pc1 0.95 0.05 0 k(C=100 M=95 Y=5 K=0)Pc1 1 0.25 0.25 k(C=100 M=100 Y=25 K=25)Pc0.75 1 0 0 k(C=75 M=100 Y=0 K=0)Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0)Pc0.35 1 0.35 0.1 k(C=35 M=100 Y=35 K=10)Pc0.1 1 0.5 0 k(C=10 M=100 Y=50 K=0)Pc0 0.95 0.2 0 k(C=0 M=95 Y=20 K=0)Pc0.25 0.25 0.4 0 k(C=25 M=25 Y=40 K=0)Pc0.4 0.45 0.5 0.05 k(C=40 M=45 Y=50 K=5)Pc0.5 0.5 0.6 0.25 k(C=50 M=50 Y=60 K=25)Pc0.55 0.6 0.65 0.4 k(C=55 M=60 Y=65 K=40)Pc0.25 0.4 0.65 0 k(C=25 M=40 Y=65 K=0)Pc0.3 0.5 0.75 0.1 k(C=30 M=50 Y=75 K=10)Pc0.35 0.6 0.8 0.25 k(C=35 M=60 Y=80 K=25)Pc0.4 0.65 0.9 0.35 k(C=40 M=65 Y=90 K=35)Pc0.4 0.7 1 0.5 k(C=40 M=70 Y=100 K=50)Pc0.5 0.7 0.8 0.7 k(C=50 M=70 Y=80 K=70)PcBb2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient)PcBb0 0 0 0 Bh2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Soft Black Vignette)PcBb2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Desert Sunset)PcBb0 0 0 0 Bh2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Copper Radial)Pc(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Fish Pattern)Pc0.2 0.3 0.7 0.15 (PANTONE 872 C) 0 x(PANTONE 872 C)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 0 0 0.899994 k(C=0 M=0 Y=0 K=90)Pc0 0 0 0.799988 k(C=0 M=0 Y=0 K=80)Pc0 0 0 0.699997 k(C=0 M=0 Y=0 K=70)Pc0 0 0 0.599991 k(C=0 M=0 Y=0 K=60)Pc0 0 0 0.5 k(C=0 M=0 Y=0 K=50)Pc0 0 0 0.399994 k(C=0 M=0 Y=0 K=40)Pc0 0 0 0.299988 k(C=0 M=0 Y=0 K=30)Pc0 0 0 0.199997 k(C=0 M=0 Y=0 K=20)Pc0 0 0 0.099991 k(C=0 M=0 Y=0 K=10)Pc0 0 0 0.049988 k(C=0 M=0 Y=0 K=5)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)Pc0 0.75 1 0 k(C=0 M=75 Y=100 K=0)Pc0 0.1 0.95 0 k(C=0 M=10 Y=95 K=0)Pc0.85 0.1 1 0 k(C=85 M=10 Y=100 K=0)Pc1 0.9 0 0 k(C=100 M=90 Y=0 K=0)Pc0.6 0.9 0.000031 0.000031 k(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 J 0 j 1 w 10 M []0 d0 XR71.9945 8371 m71.9945 -8012 L(N) *uu*u1 D0 O0.2 0.3 0.7 0.15 (PANTONE 872 C) 0 x251.0037 272.7329 m190.0645 205.5944 L190.0645 258.6411 L203.9583 270.9183 L199.0819 277.9918 L169.2186 251.9856 L174.2887 244.912 L181.8017 251.5676 L181.8017 233.6667 L84.1455 121.9519 L89.7765 115.7089 L181.9856 220.5671 L181.9856 196.849 L128.2726 136.7261 L189.8757 136.7261 L189.8757 192.4816 L256.4988 266.4899 L251.0037 272.7329 Lf0 D181.9951 145.8867 m148.0006 145.8867 L181.9951 183.7522 L181.9951 145.8867 Lf*U181.9856 316.6718 m186.21 316.6718 l186.21 301.3819 l188.4645 301.3819 l188.4645 291.5015 l204.2424 305.4451 l209.3101 298.3661 l159.1722 253.9511 l166.9596 243.0313 l160.7624 237.4073 l147.523 255.0885 l179.6405 283.6952 l179.6405 301.3792 l181.9856 301.3792 l181.9856 316.6718 lfU-8011 176.1968 m8372 176.1968 L(F) *ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF